{"version":3,"file":"ngx-formly-core.umd.js.map","sources":[null,"ng://@ngx-formly/core/lib/utils.ts","ng://@ngx-formly/core/lib/services/formly.config.ts","ng://@ngx-formly/core/lib/services/formly.form.expression.ts","ng://@ngx-formly/core/lib/services/formly.form.builder.ts","ng://@ngx-formly/core/lib/components/formly.form.ts","ng://@ngx-formly/core/lib/components/formly.field.ts","ng://@ngx-formly/core/lib/components/formly.attributes.ts","ng://@ngx-formly/core/lib/templates/field.ts","ng://@ngx-formly/core/lib/templates/field.type.ts","ng://@ngx-formly/core/lib/templates/field-array.type.ts","ng://@ngx-formly/core/lib/templates/field.wrapper.ts","ng://@ngx-formly/core/lib/components/formly.group.ts","ng://@ngx-formly/core/lib/templates/formly.validation-message.ts","ng://@ngx-formly/core/lib/core.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { FormlyFieldConfig } from './core';\nimport { Observable } from 'rxjs';\n\nexport function getFieldId(formId: string, field: FormlyFieldConfig, index: string|number) {\n  if (field.id) return field.id;\n  let type = field.type;\n  if (!type && field.template) type = 'template';\n  return [formId, type, field.key, index].join('_');\n}\n\nexport function getKeyPath(field: {key?: string|string[], fieldGroup?: any, fieldArray?: any}): (string|number)[] {\n  /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\n  if (!(<any> field)['_formlyKeyPath'] || (<any> field)['_formlyKeyPath'].key !== field.key) {\n    let keyPath: (string|number)[] = [];\n    if (field.key) {\n      /* Also allow for an array key, hence the type check  */\n      let pathElements = typeof field.key === 'string' ? field.key.split('.') : field.key;\n      for (let pathElement of pathElements) {\n        if (typeof pathElement === 'string') {\n          /* replace paths of the form names[2] by names.2, cfr. angular formly */\n          pathElement = pathElement.replace(/\\[(\\w+)\\]/g, '.$1');\n          keyPath = keyPath.concat(pathElement.split('.'));\n        } else {\n          keyPath.push(pathElement);\n        }\n      }\n      for (let i = 0; i < keyPath.length; i++) {\n        let pathElement = keyPath[i];\n        if (typeof pathElement === 'string' && stringIsInteger(pathElement))  {\n          keyPath[i] = parseInt(pathElement);\n        }\n      }\n    }\n    (<any> field)['_formlyKeyPath'] = {\n      key: field.key,\n      path: keyPath,\n    };\n  }\n\n  return (<any> field)['_formlyKeyPath'].path.slice(0);\n}\n\nfunction stringIsInteger(str: string) {\n  return !isNullOrUndefined(str) && /^\\d+$/.test(str);\n}\n\nexport const FORMLY_VALIDATORS = ['required', 'pattern', 'minLength', 'maxLength', 'min', 'max'];\n\nexport function getFieldModel(model: any, field: FormlyFieldConfig, constructEmptyObjects: boolean): any {\n  let keyPath: (string|number)[] = getKeyPath(field);\n  let value: any = model;\n  for (let i = 0; i < keyPath.length; i++) {\n    let path = keyPath[i];\n    let pathValue = value[path];\n    if (isNullOrUndefined(pathValue) && constructEmptyObjects) {\n      if (i < keyPath.length - 1) {\n        /* TODO? : It would be much nicer if we could construct object instances of the correct class, for instance by using factories. */\n        value[path] = typeof keyPath[i + 1] === 'number' ? [] : {};\n      } else if (field.fieldGroup && !field.fieldArray) {\n        value[path] = {};\n      } else if (field.fieldArray) {\n        value[path] = [];\n      }\n    }\n    value = value[path];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nexport function assignModelToFields(fields: FormlyFieldConfig[], model: any) {\n  fields.forEach((field, index) => {\n    if (!isUndefined(field.defaultValue) && isUndefined(getValueForKey(model, field.key))) {\n      assignModelValue(model, field.key, field.defaultValue);\n    }\n\n    (field as any).model = model;\n    if (field.key && (field.fieldGroup || field.fieldArray)) {\n      (field as any).model = getFieldModel(model, field, true);\n    }\n\n    if (field.fieldGroup) {\n      assignModelToFields(field.fieldGroup, field.model);\n    }\n  });\n}\n\nexport function assignModelValue(model: any, path: string | (string | number)[], value: any) {\n  if (typeof path === 'string') {\n    path = getKeyPath({key: path});\n  }\n\n  if (path.length > 1) {\n    const e = path.shift();\n    if (!model[e] || !isObject(model[e])) {\n      model[e] = typeof path[0] === 'string' ? {} : [];\n    }\n    assignModelValue(model[e], path, value);\n  } else {\n    model[path[0]] = value;\n  }\n}\n\nexport function getValueForKey(model: any, path: string | (string | number)[]): any {\n  if (typeof path === 'string') {\n    path = getKeyPath({key: path});\n  }\n  if (path.length > 1) {\n    const e = path.shift();\n    if (!model[e]) {\n      model[e] = typeof path[0] === 'string' ? {} : [];\n    }\n    return getValueForKey(model[e], path);\n  } else {\n    return model[path[0]];\n  }\n}\n\nexport function getKey(controlKey: string, actualKey: string) {\n  return actualKey ? actualKey + '.' + controlKey : controlKey;\n}\n\nexport function reverseDeepMerge(dest: any, ...args: any[]) {\n  args.forEach(src => {\n    for (let srcArg in src) {\n      if (isNullOrUndefined(dest[srcArg]) || isBlankString(dest[srcArg])) {\n        if (isFunction(src[srcArg])) {\n          dest[srcArg] = src[srcArg];\n        } else {\n          dest[srcArg] = clone(src[srcArg]);\n        }\n      } else if (objAndSameType(dest[srcArg], src[srcArg])) {\n        reverseDeepMerge(dest[srcArg], src[srcArg]);\n      }\n    }\n  });\n  return dest;\n}\n\nexport function isNullOrUndefined(value: any) {\n  return value === undefined || value === null;\n}\n\nexport function isUndefined(value: any) {\n  return value === undefined;\n}\n\nexport function isBlankString(value: any) {\n  return value === '';\n}\n\nexport function isFunction(value: any) {\n  return typeof(value) === 'function';\n}\n\nexport function objAndSameType(obj1: any, obj2: any) {\n  return isObject(obj1) && isObject(obj2) &&\n    Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2);\n}\n\nexport function isObject(x: any) {\n  return x != null && typeof x === 'object';\n}\n\nexport function clone(value: any): any {\n  if (!isObject(value) || value instanceof RegExp || value instanceof Observable) {\n    return value;\n  }\n\n  if (Object.prototype.toString.call(value) === '[object Date]') {\n    return new Date(value.getTime());\n  }\n\n  if (Array.isArray(value)) {\n    return value.slice(0).map(v => clone(v));\n  }\n\n  value = Object.assign({}, value);\n  Object.keys(value).forEach(k => value[k] = clone(value[k]));\n\n  return value;\n}\n\nexport function evalStringExpression(expression: string, argNames: string[]) {\n  try {\n    return Function.bind.apply(Function, [void 0].concat(argNames.concat(`return ${expression};`)))();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpressionValueSetter(expression: string, argNames: string[]) {\n  try {\n    return Function.bind\n      .apply(Function, [void 0].concat(argNames.concat(`${expression} = expressionValue;`)))();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpression(expression: string | Function | boolean, thisArg: any, argVal: any[]): any {\n  if (expression instanceof Function) {\n    return expression.apply(thisArg, argVal);\n  } else {\n    return expression ? true : false;\n  }\n}\n","import { Injectable, Inject, InjectionToken } from '@angular/core';\nimport { ValidationErrors, FormGroup, FormArray, AbstractControl } from '@angular/forms';\nimport { Field } from './../templates/field';\nimport { reverseDeepMerge } from './../utils';\nimport { FormlyFieldConfig, FormlyFormOptions } from '../components/formly.field.config';\n\nexport const FORMLY_CONFIG_TOKEN = new InjectionToken<FormlyConfig>('FORMLY_CONFIG_TOKEN');\n\n/**\n * Maintains list of formly field directive types. This can be used to register new field templates.\n */\n@Injectable()\nexport class FormlyConfig {\n  types: {[name: string]: TypeOption} = {};\n  validators: { [name: string]: ValidatorOption } = {};\n  wrappers: { [name: string]: WrapperOption } = {};\n  messages: { [name: string]: string | ((error: any, field: FormlyFieldConfig) => string); } = {};\n\n  templateManipulators: {\n    preWrapper: ManipulatorWrapper[];\n    postWrapper: ManipulatorWrapper[];\n  } = {\n    preWrapper: [],\n    postWrapper: [],\n  };\n\n  extras: {\n    fieldTransform?: ((fields: FormlyFieldConfig[], model: any, form: FormGroup | FormArray, options: FormlyFormOptions) => FormlyFieldConfig[])[],\n    showError?: (field: Field) => boolean;\n  } = {\n    fieldTransform: undefined,\n    showError: function(field: Field) {\n      return field.formControl && field.formControl.invalid && (field.formControl.touched || (field.options.parentForm && field.options.parentForm.submitted) || (field.field.validation && field.field.validation.show));\n    },\n  };\n\n  constructor(@Inject(FORMLY_CONFIG_TOKEN) configs: ConfigOption[] = []) {\n    configs.forEach(config => this.addConfig(config));\n  }\n\n  addConfig(config: ConfigOption) {\n    if (config.types) {\n      config.types.forEach(type => this.setType(type));\n    }\n    if (config.validators) {\n      config.validators.forEach(validator => this.setValidator(validator));\n    }\n    if (config.wrappers) {\n      config.wrappers.forEach(wrapper => this.setWrapper(wrapper));\n    }\n    if (config.manipulators) {\n      config.manipulators.forEach(manipulator => this.setManipulator(manipulator));\n    }\n    if (config.validationMessages) {\n      config.validationMessages.forEach(validation => this.addValidatorMessage(validation.name, validation.message));\n    }\n    if (config.extras) {\n      this.extras = { ...this.extras, ...config.extras };\n    }\n  }\n\n  setType(options: TypeOption | TypeOption[]) {\n    if (Array.isArray(options)) {\n      options.forEach((option) => this.setType(option));\n    } else {\n      if (!this.types[options.name]) {\n        this.types[options.name] = <TypeOption>{};\n      }\n      this.types[options.name].component = options.component;\n      this.types[options.name].name = options.name;\n      this.types[options.name].extends = options.extends;\n      this.types[options.name].defaultOptions = options.defaultOptions;\n      if (options.wrappers) {\n        options.wrappers.forEach((wrapper) => this.setTypeWrapper(options.name, wrapper));\n      }\n    }\n  }\n\n  getType(name: string): TypeOption {\n    if (!this.types[name]) {\n      throw new Error(`[Formly Error] There is no type by the name of \"${name}\"`);\n    }\n\n    this.mergeExtendedType(name);\n\n    return this.types[name];\n  }\n\n  getMergedField(field: FormlyFieldConfig = {}): any {\n    let name = field.type;\n    if (!this.types[name]) {\n      throw new Error(`[Formly Error] There is no type by the name of \"${name}\"`);\n    }\n\n    this.mergeExtendedType(name);\n    if (this.types[name].defaultOptions) {\n      reverseDeepMerge(field, this.types[name].defaultOptions);\n    }\n\n    let extendDefaults = this.types[name].extends && this.getType(this.types[name].extends).defaultOptions;\n    if (extendDefaults) {\n      reverseDeepMerge(field, extendDefaults);\n    }\n\n    if (field && field.optionsTypes) {\n      field.optionsTypes.forEach(option => {\n        let defaultOptions = this.getType(option).defaultOptions;\n        if (defaultOptions) {\n          reverseDeepMerge(field, defaultOptions);\n        }\n      });\n    }\n\n    if (!field.component) {\n      field.component = this.types[name].component;\n    }\n\n    if (!field.wrappers) {\n      field.wrappers = this.types[name].wrappers;\n    }\n  }\n\n  setWrapper(options: WrapperOption) {\n    this.wrappers[options.name] = options;\n    if (options.types) {\n      options.types.forEach((type) => {\n        this.setTypeWrapper(type, options.name);\n      });\n    }\n  }\n\n  getWrapper(name: string): WrapperOption {\n    if (!this.wrappers[name]) {\n      throw new Error(`[Formly Error] There is no wrapper by the name of \"${name}\"`);\n    }\n\n    return this.wrappers[name];\n  }\n\n  setTypeWrapper(type: string, name: string) {\n    if (!this.types[type]) {\n      this.types[type] = <TypeOption>{};\n    }\n    if (!this.types[type].wrappers) {\n      this.types[type].wrappers = <[string]>[];\n    }\n    this.types[type].wrappers.push(name);\n  }\n\n  setValidator(options: ValidatorOption) {\n    this.validators[options.name] = options;\n  }\n\n  getValidator(name: string): ValidatorOption {\n    if (!this.validators[name]) {\n      throw new Error(`[Formly Error] There is no validator by the name of \"${name}\"`);\n    }\n\n    return this.validators[name];\n  }\n\n  addValidatorMessage(name: string, message: string | ((error: any, field: FormlyFieldConfig) => string)) {\n    this.messages[name] = message;\n  }\n\n  getValidatorMessage(name: string) {\n    return this.messages[name];\n  }\n\n  setManipulator(manipulator: ManipulatorOption) {\n    new manipulator.class()[manipulator.method](this);\n  }\n\n  private mergeExtendedType(name: string) {\n    if (!this.types[name].extends) {\n      return;\n    }\n\n    const extendedType = this.getType(this.types[name].extends);\n    if (!this.types[name].component) {\n      this.types[name].component = extendedType.component;\n    }\n\n    if (!this.types[name].wrappers) {\n      this.types[name].wrappers = extendedType.wrappers;\n    }\n  }\n}\nexport interface TypeOption {\n  name: string;\n  component?: any;\n  wrappers?: string[];\n  extends?: string;\n  defaultOptions?: FormlyFieldConfig;\n}\n\nexport interface WrapperOption {\n  name: string;\n  component: any;\n  types?: string[];\n}\n\nexport interface FieldValidatorFn {\n  (c: AbstractControl, field: FormlyFieldConfig): ValidationErrors | null;\n}\n\nexport interface ValidatorOption {\n  name: string;\n  validation: FieldValidatorFn;\n}\n\nexport interface ValidationMessageOption {\n  name: string;\n  message: string | ((error: any, field: FormlyFieldConfig) => string);\n}\n\nexport interface ManipulatorOption {\n  class?: { new (): any };\n  method?: string;\n}\n\nexport interface ManipulatorWrapper {\n  (f: FormlyFieldConfig): string;\n}\n\nexport interface TemplateManipulators {\n  preWrapper?: ManipulatorWrapper[];\n  postWrapper?: ManipulatorWrapper[];\n}\n\nexport interface ConfigOption {\n  types?: TypeOption[];\n  wrappers?: WrapperOption[];\n  validators?: ValidatorOption[];\n  validationMessages?: ValidationMessageOption[];\n  manipulators?: ManipulatorOption[];\n  extras?: {\n    fieldTransform?: any,\n    showError?: (field: Field) => boolean;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyValueChangeEvent } from '../components/formly.field.config';\nimport { evalExpression, FORMLY_VALIDATORS, getFieldModel, isObject, getKeyPath, isNullOrUndefined } from '../utils';\n\n/**\n * @internal\n */\n@Injectable()\nexport class FormlyFormExpression {\n  checkFields(form: FormGroup | FormArray, fields: FormlyFieldConfig[] = [], model: any, options: FormlyFormOptions) {\n    this._checkFields(form, fields, model, options);\n  }\n\n  private _checkFields(form: FormGroup | FormArray, fields: FormlyFieldConfig[] = [], model: any, options: FormlyFormOptions) {\n    fields.forEach(field => {\n      this.checkFieldExpressionChange(form, field, this.getParentModel(model, field), options);\n      this.checkFieldVisibilityChange(form, field, this.getParentModel(model, field), options);\n\n      if (field.fieldGroup && field.fieldGroup.length > 0) {\n        this._checkFields(field.formControl ? <FormGroup> field.formControl : form, field.fieldGroup, this.getParentModel(model, field), options);\n      }\n    });\n  }\n\n  private checkFieldExpressionChange(form: FormGroup | FormArray, field: FormlyFieldConfig, model: any, options: FormlyFormOptions) {\n    if (!field || !field.expressionProperties) {\n      return;\n    }\n\n    const expressionProperties = field.expressionProperties;\n    const validators = FORMLY_VALIDATORS.map(v => `templateOptions.${v}`);\n\n    for (const key in expressionProperties) {\n      const expressionValue = evalExpression(\n        expressionProperties[key].expression,\n        { field },\n        [model, options.formState],\n      );\n\n      if (\n        expressionProperties[key].expressionValue !== expressionValue\n        && (!isObject(expressionValue) || JSON.stringify(expressionValue) !== JSON.stringify(expressionProperties[key].expressionValue))\n      ) {\n        expressionProperties[key].expressionValue = expressionValue;\n        evalExpression(\n          expressionProperties[key].expressionValueSetter,\n          { field },\n          [expressionValue, model, field],\n        );\n\n        if (key.indexOf('model.') === 0) {\n          const path = key.replace(/^model\\./, ''),\n            control = field.key && key === path ? field.formControl : form.get(path);\n\n          if (\n            control\n            && !(isNullOrUndefined(control.value) && isNullOrUndefined(expressionValue))\n            && control.value !== expressionValue\n          ) {\n            control.patchValue(expressionValue);\n          }\n        }\n\n        if (validators.indexOf(key) !== -1 && field.formControl) {\n          field.formControl.updateValueAndValidity({ emitEvent: false });\n        }\n      }\n    }\n  }\n\n  private checkFieldVisibilityChange(form: FormGroup | FormArray, field: FormlyFieldConfig, model: any, options: FormlyFormOptions) {\n    if (!field || isNullOrUndefined(field.hideExpression)) {\n      return;\n    }\n\n    const hideExpressionResult: boolean = !!evalExpression(\n      field.hideExpression,\n      { field },\n      [model, options.formState],\n    );\n\n    if (hideExpressionResult !== field.hide) {\n      // toggle hide\n      field.hide = hideExpressionResult;\n      field.templateOptions.hidden = hideExpressionResult;\n\n      if (field.formControl && field.key) {\n        const parent = this.fieldParentFormControl(form, field);\n        if (parent) {\n          const control = parent.get(`${this.fieldKey(field)}`);\n          if (hideExpressionResult === true && control) {\n            this.removeFieldControl(parent, field);\n          } else if (hideExpressionResult === false && !control) {\n            this.addFieldControl(parent, field, model);\n          }\n        }\n      }\n\n      if (options.fieldChanges) {\n        options.fieldChanges.next(<FormlyValueChangeEvent> { field: field, type: 'hidden', value: hideExpressionResult });\n      }\n    }\n  }\n\n  private addFieldControl(parent: FormArray | FormGroup, field: FormlyFieldConfig, model: any) {\n    const fieldModel = this.getFieldModel(model, field);\n\n    if (\n      !(isNullOrUndefined(field.formControl.value) && isNullOrUndefined(fieldModel))\n      && field.formControl.value !== fieldModel\n    ) {\n      field.formControl.patchValue(fieldModel, { emitEvent: false });\n    }\n\n    if (parent instanceof FormArray) {\n      parent.push(field.formControl);\n    } else if (parent instanceof FormGroup) {\n      parent.addControl(`${this.fieldKey(field)}`, field.formControl);\n    }\n  }\n\n  private getFieldModel(model: any, field: FormlyFieldConfig) {\n    if (field.fieldGroup || field.fieldArray) {\n      return model;\n    }\n\n    return getFieldModel(model, field, false);\n  }\n\n  private getParentModel(model: any, field: FormlyFieldConfig) {\n    if (field.key && (field.fieldGroup || field.fieldArray)) {\n      return getFieldModel(model, field, true);\n    }\n    return model;\n  }\n\n  private removeFieldControl(parent: FormArray | FormGroup, field: FormlyFieldConfig) {\n    if (parent instanceof FormArray) {\n      parent.removeAt(this.fieldKey(field) as number);\n    } else if (parent instanceof FormGroup) {\n      parent.removeControl(`${this.fieldKey(field)}`);\n    }\n  }\n\n  private fieldParentFormControl(form: FormGroup | FormArray, field: FormlyFieldConfig): FormArray | FormGroup {\n    const paths = getKeyPath(field);\n    paths.pop(); // remove last path\n\n    return (paths.length > 0 ? form.get(paths) : form) as any;\n  }\n\n  private fieldKey(field: FormlyFieldConfig) {\n    return getKeyPath(field).pop();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormArray, FormControl, AbstractControl, Validators, AbstractControlOptions } from '@angular/forms';\nimport { FormlyConfig, FieldValidatorFn, TemplateManipulators } from './formly.config';\nimport { FORMLY_VALIDATORS, evalStringExpression, evalExpressionValueSetter, getFieldId, isObject, isNullOrUndefined, clone, assignModelToFields } from './../utils';\nimport { FormlyFieldConfig, FormlyFormOptions } from '../components/formly.field.config';\nimport { getKeyPath, isFunction } from '../utils';\nimport { FormlyFormExpression } from './formly.form.expression';\n\n@Injectable()\nexport class FormlyFormBuilder {\n  private formId = 0;\n\n  constructor(\n    private formlyConfig: FormlyConfig,\n    private formlyFormExpression: FormlyFormExpression,\n  ) {}\n\n  buildForm(form: FormGroup | FormArray, fields: FormlyFieldConfig[] = [], model: any, options: FormlyFormOptions) {\n    let fieldTransforms = (options && options.fieldTransform) || this.formlyConfig.extras.fieldTransform;\n    if (!Array.isArray(fieldTransforms)) {\n      fieldTransforms = [fieldTransforms];\n    }\n\n    fieldTransforms.forEach(fieldTransform => {\n      if (fieldTransform) {\n        fields = fieldTransform(fields, model, form, options);\n        if (!fields) {\n          throw new Error('fieldTransform must return an array of fields');\n        }\n      }\n    });\n\n    assignModelToFields(fields, model);\n    this._buildForm(form, fields, options);\n    this.formlyFormExpression.checkFields(form, fields, model, options);\n  }\n\n  private _buildForm(form: FormGroup | FormArray, fields: FormlyFieldConfig[] = [], options: FormlyFormOptions) {\n    this.formId++;\n    this.registerFormControls(form, fields, options);\n  }\n\n  private registerFormControls(form: FormGroup | FormArray, fields: FormlyFieldConfig[], options: FormlyFormOptions) {\n    fields.forEach((field, index) => {\n      field.id = getFieldId(`formly_${this.formId}`, field, index);\n      this.initFieldOptions(field);\n      this.initFieldExpression(field, options);\n      this.initFieldValidation(field);\n      this.initFieldWrappers(field);\n      this.initFieldAsyncValidation(field);\n\n      if (field.key && field.type) {\n        const paths = getKeyPath({ key: field.key });\n        let rootForm = form, rootModel = field.model;\n        paths.forEach((path, index) => {\n          // FormGroup/FormArray only allow string value for path\n          const formPath = path.toString();\n          // is last item\n          if (index === paths.length - 1) {\n            this.addFormControl(rootForm, field, rootModel, formPath);\n            if (field.fieldArray) {\n              field.fieldGroup = [];\n              field.model.forEach((m: any, i: number) => field.fieldGroup.push(\n                { ...clone(field.fieldArray), key: `${i}` },\n              ));\n              assignModelToFields(field.fieldGroup, rootModel);\n            }\n\n          } else {\n            let nestedForm = rootForm.get(formPath) as FormGroup;\n            if (!nestedForm) {\n              nestedForm = new FormGroup({});\n              this.addControl(rootForm, formPath, nestedForm);\n            }\n            if (!rootModel[path]) {\n              rootModel[path] = typeof path === 'string' ? {} : [];\n            }\n\n            rootForm = nestedForm;\n            rootModel = rootModel[path];\n          }\n        });\n      }\n\n      if (field.fieldGroup) {\n        if (!field.type) {\n          field.type = 'formly-group';\n        }\n\n        // if `hideExpression` is set in that case we have to deal\n        // with toggle FormControl for each field in fieldGroup separately\n        if (field.hideExpression) {\n          field.fieldGroup.forEach(f => {\n            let hideExpression: any = f.hideExpression || (() => false);\n            if (typeof hideExpression === 'string') {\n              hideExpression = evalStringExpression(hideExpression, ['model', 'formState']);\n            }\n\n            f.hideExpression = (model, formState) => field.hide || hideExpression(model, formState);\n          });\n        }\n\n        if (field.key) {\n          this.addFormControl(form, field, { [field.key]: field.fieldArray ? [] : {} }, field.key);\n          this._buildForm(field.formControl as FormGroup, field.fieldGroup, options);\n        } else {\n          this._buildForm(form, field.fieldGroup, options);\n        }\n      }\n    });\n  }\n\n  private initFieldExpression(field: FormlyFieldConfig, options: FormlyFormOptions) {\n    if (field.expressionProperties) {\n      for (const key in field.expressionProperties as any) {\n        if (typeof field.expressionProperties[key] === 'string' || isFunction(field.expressionProperties[key])) {\n          // cache built expression\n          field.expressionProperties[key] = {\n            expression: isFunction(field.expressionProperties[key]) ? field.expressionProperties[key] : evalStringExpression(field.expressionProperties[key], ['model', 'formState']),\n            expressionValueSetter: evalExpressionValueSetter(\n              `field.${key}`,\n              ['expressionValue', 'model', 'field'],\n            ),\n          };\n        }\n      }\n    }\n\n    if (field.hideExpression) {\n      // delete hide value in order to force re-evaluate it in FormlyFormExpression.\n      delete field.hide;\n      if (typeof field.hideExpression === 'string') {\n        // cache built expression\n        field.hideExpression = evalStringExpression(field.hideExpression, ['model', 'formState']);\n      }\n    }\n  }\n\n  private initFieldOptions(field: FormlyFieldConfig) {\n    field.templateOptions = field.templateOptions || {};\n    if (field.type) {\n      this.formlyConfig.getMergedField(field);\n      if (field.key) {\n        field.templateOptions = Object.assign({\n          label: '',\n          placeholder: '',\n          focus: false,\n        }, field.templateOptions);\n      }\n    }\n  }\n\n  private initFieldAsyncValidation(field: FormlyFieldConfig) {\n    const validators: any = [];\n    if (field.asyncValidators) {\n      for (const validatorName in field.asyncValidators) {\n        if (validatorName !== 'validation') {\n          let validator = field.asyncValidators[validatorName];\n          if (isObject(validator)) {\n            validator = validator.expression;\n          }\n\n          validators.push((control: FormControl) => new Promise((resolve) => {\n            return validator(control, field).then((result: boolean) => {\n              resolve(result ? null : { [validatorName]: true });\n            });\n          }));\n        }\n      }\n    }\n\n    if (field.asyncValidators && Array.isArray(field.asyncValidators.validation)) {\n      field.asyncValidators.validation\n        .forEach((validator: any) => validators.push(this.wrapNgValidatorFn(field, validator)));\n    }\n\n    if (validators.length) {\n      if (field.asyncValidators && !Array.isArray(field.asyncValidators.validation)) {\n        field.asyncValidators.validation = Validators.composeAsync([field.asyncValidators.validation, ...validators]);\n      } else {\n        field.asyncValidators = {\n          validation: Validators.composeAsync(validators),\n        };\n      }\n    }\n  }\n\n  private initFieldValidation(field: FormlyFieldConfig) {\n    const validators: any = [];\n    FORMLY_VALIDATORS\n      .filter(opt => (field.templateOptions && field.templateOptions.hasOwnProperty(opt))\n        || (field.expressionProperties && field.expressionProperties[`templateOptions.${opt}`]),\n      )\n      .forEach((opt) => {\n        validators.push((control: FormControl) => {\n          if (field.templateOptions[opt] === false) {\n            return null;\n          }\n\n          return this.getValidation(opt, field.templateOptions[opt])(control);\n        });\n      });\n\n    if (field.validators) {\n      for (const validatorName in field.validators) {\n        if (validatorName !== 'validation') {\n          let validator = field.validators[validatorName];\n          if (isObject(validator)) {\n            validator = validator.expression;\n          }\n\n          validators.push((control: FormControl) => validator(control, field) ? null : { [validatorName]: true });\n        }\n      }\n    }\n\n    if (field.validators && Array.isArray(field.validators.validation)) {\n      field.validators.validation\n        .forEach((validator: any) => validators.push(this.wrapNgValidatorFn(field, validator)));\n    }\n\n    if (validators.length) {\n      if (field.validators && !Array.isArray(field.validators.validation)) {\n        field.validators.validation = Validators.compose([field.validators.validation, ...validators]);\n      } else {\n        field.validators = {\n          validation: Validators.compose(validators),\n        };\n      }\n    }\n  }\n\n  private addFormControl(form: FormGroup | FormArray, field: FormlyFieldConfig, model: any, path: string) {\n    let control: AbstractControl;\n    const validators = field.validators ? field.validators.validation : undefined,\n      asyncValidators = field.asyncValidators ? field.asyncValidators.validation : undefined,\n      updateOn = field.modelOptions && field.modelOptions.updateOn ?\n        field.modelOptions.updateOn : undefined;\n    const abstractControlOptions = {\n      validators,\n      asyncValidators,\n      updateOn,\n    } as AbstractControlOptions;\n\n    if (field.formControl instanceof AbstractControl || form.get(path)) {\n      control = field.formControl || form.get(path);\n      if (\n        !(isNullOrUndefined(control.value) && isNullOrUndefined(model[path]))\n        && control.value !== model[path]\n        && control instanceof FormControl\n      ) {\n        control.patchValue(model[path]);\n      }\n    } else if (field.component && field.component.createControl) {\n      control = field.component.createControl(model[path], field);\n    } else if (field.fieldGroup && field.key && field.key === path && !field.fieldArray) {\n      control = new FormGroup(model[path], abstractControlOptions);\n    } else if (field.fieldArray && field.key && field.key === path) {\n      control = new FormArray([], abstractControlOptions);\n    } else {\n      control = new FormControl(model[path], abstractControlOptions);\n    }\n\n    if (field.templateOptions.disabled) {\n      control.disable();\n    }\n\n    // Replace decorated property with a getter that returns the observable.\n    // https://github.com/angular-redux/store/blob/master/src/decorators/select.ts#L79-L85\n    if (delete field.templateOptions.disabled) {\n      Object.defineProperty(field.templateOptions, 'disabled', {\n        get: (function () { return !this.formControl.enabled; }).bind(field),\n        set: (function (value: boolean) {\n          if (this.expressionProperties && this.expressionProperties.hasOwnProperty('templateOptions.disabled')) {\n            this.expressionProperties['templateOptions.disabled'].expressionValue = value;\n          }\n\n          value ? this.formControl.disable() : this.formControl.enable();\n        }).bind(field),\n        enumerable: true,\n        configurable: true,\n      });\n    }\n\n    this.addControl(form, path, control, field);\n  }\n\n  private addControl(form: FormGroup | FormArray, key: string | number, formControl: AbstractControl, field?: FormlyFieldConfig) {\n    if (field) {\n      field.formControl = formControl;\n    }\n\n    if (form instanceof FormArray) {\n      if (form.at(<number> key) !== formControl) {\n        form.setControl(<number>key, formControl);\n      }\n    } else {\n      if (form.get(<string> key) !== formControl) {\n        form.setControl(<string>key, formControl);\n      }\n    }\n  }\n\n  private getValidation(opt: string, value: any) {\n    switch (opt) {\n      case 'required':\n        return Validators.required;\n      case 'pattern':\n        return Validators.pattern(value);\n      case 'minLength':\n        return Validators.minLength(value);\n      case 'maxLength':\n        return Validators.maxLength(value);\n      case 'min':\n        return Validators.min(value);\n      case 'max':\n        return Validators.max(value);\n    }\n  }\n\n  private wrapNgValidatorFn(field: FormlyFieldConfig, validator: string | FieldValidatorFn) {\n    validator = typeof validator === 'string'\n    ? this.formlyConfig.getValidator(validator).validation\n    : validator;\n\n    return (control: AbstractControl) => (validator as FieldValidatorFn)(control, field);\n  }\n\n  private initFieldWrappers(field: FormlyFieldConfig) {\n    const templateManipulators: TemplateManipulators = {\n      preWrapper: [],\n      postWrapper: [],\n    };\n\n    if (field.templateOptions) {\n      this.mergeTemplateManipulators(templateManipulators, field.templateOptions.templateManipulators);\n    }\n\n    this.mergeTemplateManipulators(templateManipulators, this.formlyConfig.templateManipulators);\n\n    const preWrappers = templateManipulators.preWrapper.map(m => m(field)).filter(type => type),\n      postWrappers = templateManipulators.postWrapper.map(m => m(field)).filter(type => type);\n\n    if (!field.wrappers) {\n      field.wrappers = [];\n    }\n\n    field.wrappers = [...preWrappers, ...(field.wrappers || []), ...postWrappers];\n  }\n\n  private mergeTemplateManipulators(source: TemplateManipulators, target: TemplateManipulators) {\n    target = target || {};\n    if (target.preWrapper) {\n      source.preWrapper = source.preWrapper.concat(target.preWrapper);\n    }\n    if (target.postWrapper) {\n      source.postWrapper = source.postWrapper.concat(target.postWrapper);\n    }\n\n    return source;\n  }\n}\n","import { Component, DoCheck, OnChanges, Input, SimpleChanges, Optional, EventEmitter, Output, SkipSelf, OnDestroy } from '@angular/core';\nimport { FormGroup, FormArray, NgForm, FormGroupDirective, FormControl, AbstractControl } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyValueChangeEvent } from './formly.field.config';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\nimport { FormlyFormExpression } from '../services/formly.form.expression';\nimport { FormlyConfig } from '../services/formly.config';\nimport { assignModelValue, isNullOrUndefined, reverseDeepMerge, getFieldModel, clone, assignModelToFields } from '../utils';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-form',\n  template: `\n    <formly-field *ngFor=\"let field of fields\"\n      [model]=\"field.model\" [form]=\"form\"\n      [field]=\"field\"\n      [ngClass]=\"field.className\"\n      [options]=\"options\">\n    </formly-field>\n    <ng-content></ng-content>\n  `,\n})\nexport class FormlyForm implements DoCheck, OnChanges, OnDestroy {\n  @Input() model: any = {};\n  @Input() form: FormGroup | FormArray = new FormGroup({});\n  @Input() fields: FormlyFieldConfig[] = [];\n  @Input() options: FormlyFormOptions;\n  @Output() modelChange = new EventEmitter<any>();\n\n  /** @internal */\n  @Input() isRoot = true;\n\n  private initialModel: any;\n  private modelChangeSubs: Subscription[] = [];\n\n  constructor(\n    private formlyBuilder: FormlyFormBuilder,\n    private formlyExpression: FormlyFormExpression,\n    private formlyConfig: FormlyConfig,\n    @Optional() private parentForm: NgForm,\n    @Optional() private parentFormGroup: FormGroupDirective,\n    @Optional() @SkipSelf() private parentFormlyForm: FormlyForm,\n  ) {}\n\n  ngDoCheck() {\n    this.checkExpressionChange();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.fields || this.fields.length === 0 || !this.isRoot) {\n      return;\n    }\n\n    if (changes.fields || changes.form) {\n      this.model = this.model || {};\n      this.form = this.form || (new FormGroup({}));\n      this.setOptions();\n      this.clearModelSubscriptions();\n      this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n      this.trackModelChanges(this.fields);\n      this.updateInitialValue();\n    } else if (changes.model) {\n      this.patchModel(this.model);\n    }\n  }\n\n  ngOnDestroy() {\n    this.clearModelSubscriptions();\n  }\n\n  changeModel(event: { key: string, value: any }) {\n    assignModelValue(this.model, event.key, event.value);\n    this.modelChange.emit(this.model);\n    this.checkExpressionChange();\n  }\n\n  setOptions() {\n    this.options = this.options || {};\n\n    this.options.formState = this.options.formState || {};\n    if (!this.options.showError) {\n      this.options.showError = this.formlyConfig.extras.showError;\n    }\n    if (!this.options.fieldChanges) {\n      this.options.fieldChanges = new Subject<FormlyValueChangeEvent>();\n    }\n\n    if (!this.options.resetModel) {\n      this.options.resetModel = this.resetModel.bind(this);\n    }\n\n    if (!this.options.parentForm) {\n      this.options.parentForm = this.parentFormGroup || this.parentForm;\n    }\n\n    if (!this.options.updateInitialValue) {\n      this.options.updateInitialValue = this.updateInitialValue.bind(this);\n    }\n\n    if (!(<any> this.options).resetTrackModelChanges) {\n      (<any> this.options).resetTrackModelChanges = () => {\n        this.clearModelSubscriptions();\n        this.trackModelChanges(this.fields);\n      };\n    }\n  }\n\n  private checkExpressionChange() {\n    if (this.isRoot) {\n      this.formlyExpression.checkFields(this.form, this.fields, this.model, this.options);\n    }\n  }\n\n  private trackModelChanges(fields: FormlyFieldConfig[], rootKey: string[] = []) {\n    fields.forEach(field => {\n      if (field.key && field.type && !field.fieldGroup && !field.fieldArray) {\n        const valueChanges = field.formControl.valueChanges.pipe(\n          field.modelOptions && field.modelOptions.debounce && field.modelOptions.debounce.default\n          ? debounceTime(field.modelOptions.debounce.default)\n          : tap(() => {}),\n          map(value => {\n            if (field.parsers && field.parsers.length > 0) {\n              field.parsers.forEach(parserFn => value = parserFn(value));\n            }\n\n            return value;\n          }),\n          tap(value => this.changeModel({ key: [...rootKey, field.key].join('.'), value })),\n        );\n\n        this.modelChangeSubs.push(valueChanges.subscribe());\n      }\n\n      if (field.fieldGroup && field.fieldGroup.length > 0) {\n        this.trackModelChanges(field.fieldGroup, field.key ? [...rootKey, field.key] : rootKey);\n      }\n    });\n  }\n\n  private clearModelSubscriptions() {\n    this.modelChangeSubs.forEach(sub => sub.unsubscribe());\n    this.modelChangeSubs = [];\n  }\n\n  private patchModel(model: any) {\n    assignModelToFields(this.fields, model);\n    this.clearModelSubscriptions();\n    this.resetFieldArray(this.fields, model);\n    this.initializeFormValue(this.form);\n    (<FormGroup> this.form).patchValue(model, { onlySelf: true });\n    this.trackModelChanges(this.fields);\n  }\n\n  private resetModel(model?: any) {\n    model = isNullOrUndefined(model) ? this.initialModel : model;\n    this.resetFieldArray(this.fields, model);\n\n    // we should call `NgForm::resetForm` to ensure changing `submitted` state after resetting form\n    // but only when the current component is a root one.\n    if (!this.parentFormlyForm && this.options.parentForm && this.options.parentForm.control === this.form) {\n      this.options.parentForm.resetForm(model);\n    } else {\n      this.form.reset(model);\n    }\n\n    (<any> this.options).resetTrackModelChanges();\n  }\n\n  private resetFieldArray(fields: FormlyFieldConfig[], newModel: any) {\n    fields.forEach(field => {\n      if ((field.fieldGroup && field.fieldGroup.length > 0) || field.fieldArray) {\n        const newFieldModel = getFieldModel(newModel, field, true);\n        if (field.fieldArray) {\n          field.fieldGroup = field.fieldGroup || [];\n          field.fieldGroup.length = 0;\n\n          if (field.model !== newFieldModel && field.model) {\n            field.model.length = 0;\n          }\n\n          const formControl = <FormArray>field.formControl;\n          while (formControl.length !== 0) {\n            formControl.removeAt(0);\n          }\n\n          newFieldModel.forEach((m: any, i: number) => {\n            field.model[i] = m;\n            field.fieldGroup.push({ ...clone(field.fieldArray), key: `${i}` });\n            this.formlyBuilder.buildForm(formControl, [field.fieldGroup[i]], newFieldModel, this.options);\n          });\n        } else {\n          this.resetFieldArray(field.fieldGroup, newFieldModel);\n        }\n      } else if (field.key && field.type) {\n        field.formControl.reset(getFieldModel(newModel, field, false));\n      }\n    });\n  }\n\n  private initializeFormValue(control: AbstractControl) {\n    if (control instanceof FormControl) {\n      control.setValue(null);\n    } else if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach(k => this.initializeFormValue(control.controls[k]));\n    } else if (control instanceof FormArray) {\n      control.controls.forEach(c => this.initializeFormValue(c));\n    }\n  }\n\n  private updateInitialValue() {\n    this.initialModel = reverseDeepMerge({}, this.model);\n  }\n}\n","import {\n  Component, OnInit, OnChanges, EventEmitter, Input, Output, OnDestroy,\n  ViewContainerRef, ViewChild, ComponentRef, ComponentFactoryResolver, SimpleChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyConfig } from '../services/formly.config';\nimport { Field } from '../templates/field';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyLifeCycleFn, FormlyLifeCycleOptions } from './formly.field.config';\n\n@Component({\n  selector: 'formly-field',\n  template: `\n    <ng-template #fieldComponent></ng-template>\n    <div *ngIf=\"field.template && !field.fieldGroup\" [innerHtml]=\"field.template\"></div>\n  `,\n  host: {\n    '[style.display]': 'field.hide ? \"none\":\"\"',\n  },\n})\nexport class FormlyField implements OnInit, OnChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input() model: any;\n  @Input() form: FormGroup;\n  @Input() field: FormlyFieldConfig;\n  @Input() options: FormlyFormOptions = {};\n  @Output() modelChange: EventEmitter<any> = new EventEmitter();\n  @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\n\n  private componentRefs: ComponentRef<Field>[] = [];\n\n  constructor(\n    private formlyConfig: FormlyConfig,\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {}\n\n  ngAfterContentInit() {\n    this.lifeCycleHooks(this.lifecycle.afterContentInit);\n  }\n\n  ngAfterContentChecked() {\n    this.lifeCycleHooks(this.lifecycle.afterContentChecked);\n  }\n\n  ngAfterViewInit() {\n    this.lifeCycleHooks(this.lifecycle.afterViewInit);\n  }\n\n  ngAfterViewChecked() {\n    this.lifeCycleHooks(this.lifecycle.afterViewChecked);\n  }\n\n  ngDoCheck() {\n    this.lifeCycleHooks(this.lifecycle.doCheck);\n  }\n\n  ngOnInit() {\n    if (!this.field.template) {\n      this.createFieldComponent();\n    }\n    this.lifeCycleHooks(this.lifecycle.onInit);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.lifeCycleHooks(this.lifecycle.onChanges);\n    this.componentRefs.forEach(ref => {\n      Object.assign(ref.instance, {\n        model: this.model,\n        form: this.form,\n        field: this.field,\n        options: this.options,\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.lifeCycleHooks(this.lifecycle.onDestroy);\n    this.componentRefs.forEach(componentRef => componentRef.destroy());\n    this.componentRefs = [];\n  }\n\n  private createFieldComponent(): ComponentRef<Field> {\n    const type = this.formlyConfig.getType(this.field.type);\n\n    let fieldComponent = this.fieldComponent;\n    (this.field.wrappers || []).forEach(wrapperName => {\n      const wrapperRef = this.createComponent(fieldComponent, this.formlyConfig.getWrapper(wrapperName).component);\n      fieldComponent = wrapperRef.instance.fieldComponent;\n    });\n\n    return this.createComponent(fieldComponent, type.component);\n  }\n\n  private createComponent(fieldComponent: ViewContainerRef, component: any): ComponentRef<any> {\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    let ref = <ComponentRef<Field>>fieldComponent.createComponent(componentFactory);\n\n    Object.assign(ref.instance, {\n        model: this.model,\n        form: this.form,\n        field: this.field,\n        options: this.options,\n    });\n\n    this.componentRefs.push(ref);\n\n    return ref;\n  }\n\n  private get lifecycle(): FormlyLifeCycleOptions {\n    return this.field.lifecycle || {};\n  }\n\n  private lifeCycleHooks(callback: FormlyLifeCycleFn) {\n    if (callback) {\n      callback(this.form, this.field, this.model, this.options);\n    }\n  }\n}\n","import { Directive, HostListener, ElementRef, Input, OnChanges, SimpleChanges, SimpleChange, Renderer2 } from '@angular/core';\nimport { FormlyFieldConfig } from './formly.field.config';\n\n@Directive({\n  selector: '[formlyAttributes]',\n})\nexport class FormlyAttributes implements OnChanges {\n  @Input('formlyAttributes') field: FormlyFieldConfig;\n  private attributes = ['id', 'name', 'placeholder', 'tabindex', 'step', 'readonly'];\n  private statements = ['change', 'keydown', 'keyup', 'keypress', 'click', 'focus', 'blur'];\n\n  @HostListener('focus') onFocus() {\n    this.field.focus = true;\n  }\n\n  @HostListener('blur') onBlur() {\n    this.field.focus = false;\n  }\n\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field) {\n      const fieldChanges = changes.field;\n      this.attributes\n        .filter(attr => this.canApplyRender(fieldChanges, attr))\n        .forEach(attr => this.renderer.setAttribute(\n          this.elementRef.nativeElement, attr, this.getPropValue(this.field, attr),\n        ));\n\n      if (this.field.templateOptions && this.field.templateOptions.attributes) {\n        const attributes = this.field.templateOptions.attributes;\n        Object.keys(attributes).forEach(name => this.renderer.setAttribute(\n          this.elementRef.nativeElement, name, attributes[name] as string,\n        ));\n      }\n\n      this.statements\n        .filter(statement => this.canApplyRender(fieldChanges, statement))\n        .forEach(statement => this.renderer.listen(\n          this.elementRef.nativeElement, statement, this.getStatementValue(statement),\n        ));\n\n      if ((fieldChanges.previousValue || {}).focus !== (fieldChanges.currentValue || {}).focus && this.elementRef.nativeElement.focus) {\n        this.elementRef.nativeElement[this.field.focus ? 'focus' : 'blur']();\n      }\n    }\n  }\n\n  private getPropValue(field: FormlyFieldConfig, prop: string) {\n    field = field || {};\n    if (field.templateOptions && field.templateOptions[prop]) {\n      return field.templateOptions[prop];\n    }\n\n    return (<any>field)[prop] || '';\n  }\n\n  private getStatementValue(statement: string) {\n    const fn = this.field.templateOptions[statement];\n\n    return (event: any) => fn(this.field, event);\n  }\n\n  private canApplyRender(fieldChange: SimpleChange, prop: string): Boolean {\n    const currentValue = this.getPropValue(this.field, prop),\n      previousValue = this.getPropValue(fieldChange.previousValue, prop);\n\n    if (previousValue !== currentValue) {\n      if (this.statements.indexOf(prop) !== -1) {\n        return typeof currentValue === 'function';\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Input } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { FormlyTemplateOptions, FormlyFieldConfig, FormlyFormOptions } from '../components/formly.field.config';\n\nexport abstract class Field {\n  @Input() form: FormGroup;\n  @Input() field: FormlyFieldConfig;\n  @Input() model: any;\n  @Input() options: FormlyFormOptions;\n\n  get key() { return this.field.key; }\n\n  get formControl(): AbstractControl { return this.field.formControl; }\n\n  get to(): FormlyTemplateOptions { return this.field.templateOptions; }\n\n  get showError(): boolean { return this.options.showError(this); }\n\n  get id(): string { return this.field.id; }\n\n  get formState() { return this.options.formState || {}; }\n}\n","import { Field } from './field';\nimport { OnInit, OnChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy, AfterViewChecked, SimpleChanges } from '@angular/core';\n\nexport abstract class FieldType extends Field implements OnInit, OnChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy {\n  ngOnInit() {}\n  ngOnChanges(changes: SimpleChanges) {}\n  ngDoCheck() {}\n  ngAfterContentInit() {}\n  ngAfterContentChecked() {}\n  ngAfterViewInit() {}\n  ngAfterViewChecked() {}\n  ngOnDestroy() {}\n}\n","import { FormArray } from '@angular/forms';\nimport { FieldType } from './field.type';\nimport { clone, isNullOrUndefined } from '../utils';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\n\nexport abstract class FieldArrayType extends FieldType {\n  formControl: FormArray;\n\n constructor(private builder: FormlyFormBuilder) {\n    super();\n  }\n\n  add(i?: number, initialModel?: any) {\n    i = isNullOrUndefined(i) ? this.field.fieldGroup.length : i;\n\n    this.model.splice(i, 0, initialModel ? clone(initialModel) : undefined);\n    this.field.fieldGroup.splice(i, 0, { ...clone(this.field.fieldArray) });\n\n    this.field.fieldGroup.forEach((field, index) => {\n      field.key = `${index}`;\n    });\n\n    const form = new FormArray([]);\n    this.builder.buildForm(form, [this.field.fieldGroup[i]], this.model, this.options);\n    this.formControl.insert(i, form.at(0));\n\n    (<any> this.options).resetTrackModelChanges();\n  }\n\n  remove(i: number) {\n    this.formControl.removeAt(i);\n    this.field.fieldGroup.splice(i, 1);\n    this.field.fieldGroup.forEach((f, index) => f.key = `${index}`);\n    this.model.splice(i, 1);\n    (<any> this.options).resetTrackModelChanges();\n  }\n}\n","import { ViewContainerRef } from '@angular/core';\nimport { Field } from './field';\n\nexport abstract class FieldWrapper extends Field {\n  fieldComponent: ViewContainerRef;\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '../templates/field.type';\n\n@Component({\n  selector: 'formly-group',\n  template: `\n    <formly-form\n      [fields]=\"field.fieldGroup\"\n      [isRoot]=\"false\"\n      [model]=\"model\"\n      [form]=\"field.formControl || form\"\n      [options]=\"options\"\n      [ngClass]=\"field.fieldGroupClassName\">\n      <ng-content></ng-content>\n    </formly-form>\n  `,\n})\nexport class FormlyGroup extends FieldType {}\n","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FormlyConfig } from '../services/formly.config';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\n\n@Component({\n  selector: 'formly-validation-message',\n  template: `{{ errorMessage }}`,\n})\nexport class FormlyValidationMessage {\n  @Input() field: FormlyFieldConfig;\n  @Input() set fieldForm(control: FormControl) {\n    console.warn(`formly-validation-message: Passing 'fieldForm' input is deprecated and it will be removed in the 4.0 version.`);\n  }\n\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  get errorMessage(): string {\n    const fieldForm = this.field.formControl;\n    for (let error in fieldForm.errors) {\n      if (fieldForm.errors.hasOwnProperty(error)) {\n        let message: string | Function = this.formlyConfig.getValidatorMessage(error);\n\n        if (this.field.validation && this.field.validation.messages && this.field.validation.messages[error]) {\n          message = this.field.validation.messages[error];\n        }\n\n        if (this.field.validators && this.field.validators[error] && this.field.validators[error].message) {\n          message = this.field.validators[error].message;\n        }\n\n        if (this.field.asyncValidators && this.field.asyncValidators[error] && this.field.asyncValidators[error].message) {\n          message = this.field.asyncValidators[error].message;\n        }\n\n        if (typeof message === 'function') {\n          return message(fieldForm.errors[error], this.field);\n        }\n\n        return message;\n      }\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyForm } from './components/formly.form';\nimport { FormlyField } from './components/formly.field';\nimport { FormlyAttributes } from './components/formly.attributes';\nimport { FormlyConfig, ConfigOption, FORMLY_CONFIG_TOKEN } from './services/formly.config';\nimport { FormlyFormBuilder } from './services/formly.form.builder';\nimport { FormlyFormExpression } from './services/formly.form.expression';\nimport { FormlyGroup } from './components/formly.group';\nimport { FormlyValidationMessage } from './templates/formly.validation-message';\n\n@NgModule({\n  declarations: [FormlyForm, FormlyField, FormlyAttributes, FormlyGroup, FormlyValidationMessage],\n  entryComponents: [FormlyGroup],\n  exports: [FormlyForm, FormlyField, FormlyAttributes, FormlyGroup, FormlyValidationMessage],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class FormlyModule {\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        FormlyFormBuilder,\n        FormlyFormExpression,\n        FormlyConfig,\n        { provide: FORMLY_CONFIG_TOKEN, useValue: { types: [{ name: 'formly-group', component: FormlyGroup }] }, multi: true },\n        { provide: FORMLY_CONFIG_TOKEN, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n      ],\n    };\n  }\n\n  static forChild(config: ConfigOption = {}): ModuleWithProviders {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG_TOKEN, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n      ],\n    };\n  }\n}\n"],"names":["tslib_1.__values","Observable","InjectionToken","Injectable","Inject","FormArray","FormGroup","Validators","AbstractControl","FormControl","EventEmitter","Subject","debounceTime","tap","map","tslib_1.__spread","Component","NgForm","Optional","FormGroupDirective","SkipSelf","Input","Output","ComponentFactoryResolver","ViewChild","ViewContainerRef","Directive","Renderer2","ElementRef","HostListener","tslib_1.__extends","ANALYZE_FOR_ENTRY_COMPONENTS","NgModule","CommonModule","ReactiveFormsModule"],"mappings":"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"}
