import { Component, NgModule } from '@angular/core';
import { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';
import { CommonModule } from '@angular/common';
import { FormlyModule } from '@ngx-formly/core';
import { ReactiveFormsModule } from '@angular/forms';
import { MatSlideToggleModule } from '@angular/material/slide-toggle';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class FormlyToggleTypeComponent extends FieldType {
}
FormlyToggleTypeComponent.decorators = [
    { type: Component, args: [{
                selector: 'formly-field-mat-toggle',
                template: `
    <mat-slide-toggle [formControl]="formControl" [formlyAttributes]="field">
      {{ to.label }}
    </mat-slide-toggle>
  `,
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class FormlyMatToggleModule {
}
FormlyMatToggleModule.decorators = [
    { type: NgModule, args: [{
                declarations: [FormlyToggleTypeComponent],
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    MatSlideToggleModule,
                    FormlyMatFormFieldModule,
                    FormlyModule.forChild({
                        types: [{
                                name: 'toggle',
                                component: FormlyToggleTypeComponent,
                                wrappers: ['form-field'],
                                defaultOptions: {
                                    templateOptions: {
                                        hideFieldUnderline: true,
                                        floatLabel: 'always',
                                        hideLabel: true,
                                    },
                                },
                            }],
                    }),
                ],
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { FormlyMatToggleModule, FormlyToggleTypeComponent as Éµa };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZvcm1seS1tYXRlcmlhbC10b2dnbGUuanMubWFwIiwic291cmNlcyI6WyJuZzovL0BuZ3gtZm9ybWx5L21hdGVyaWFsL3RvZ2dsZS90b2dnbGUudHlwZS50cyIsIm5nOi8vQG5neC1mb3JtbHkvbWF0ZXJpYWwvdG9nZ2xlL3RvZ2dsZS5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFR5cGUgfSBmcm9tICdAbmd4LWZvcm1seS9tYXRlcmlhbC9mb3JtLWZpZWxkJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZm9ybWx5LWZpZWxkLW1hdC10b2dnbGUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxtYXQtc2xpZGUtdG9nZ2xlIFtmb3JtQ29udHJvbF09XCJmb3JtQ29udHJvbFwiIFtmb3JtbHlBdHRyaWJ1dGVzXT1cImZpZWxkXCI+XG4gICAgICB7eyB0by5sYWJlbCB9fVxuICAgIDwvbWF0LXNsaWRlLXRvZ2dsZT5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgRm9ybWx5VG9nZ2xlVHlwZUNvbXBvbmVudCBleHRlbmRzIEZpZWxkVHlwZSB7fVxuIiwiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBGb3JtbHlNb2R1bGUgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBNYXRTbGlkZVRvZ2dsZU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3NsaWRlLXRvZ2dsZSc7XG5pbXBvcnQgeyBGb3JtbHlNYXRGb3JtRmllbGRNb2R1bGUgfSBmcm9tICdAbmd4LWZvcm1seS9tYXRlcmlhbC9mb3JtLWZpZWxkJztcblxuaW1wb3J0IHsgRm9ybWx5VG9nZ2xlVHlwZUNvbXBvbmVudCB9IGZyb20gJy4vdG9nZ2xlLnR5cGUnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtGb3JtbHlUb2dnbGVUeXBlQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgIE1hdFNsaWRlVG9nZ2xlTW9kdWxlLFxuICAgIEZvcm1seU1hdEZvcm1GaWVsZE1vZHVsZSxcbiAgICBGb3JtbHlNb2R1bGUuZm9yQ2hpbGQoe1xuICAgICAgdHlwZXM6IFt7XG4gICAgICAgIG5hbWU6ICd0b2dnbGUnLFxuICAgICAgICBjb21wb25lbnQ6IEZvcm1seVRvZ2dsZVR5cGVDb21wb25lbnQsXG4gICAgICAgIHdyYXBwZXJzOiBbJ2Zvcm0tZmllbGQnXSxcbiAgICAgICAgZGVmYXVsdE9wdGlvbnM6IHtcbiAgICAgICAgICB0ZW1wbGF0ZU9wdGlvbnM6IHtcbiAgICAgICAgICAgIGhpZGVGaWVsZFVuZGVybGluZTogdHJ1ZSxcbiAgICAgICAgICAgIGZsb2F0TGFiZWw6ICdhbHdheXMnLFxuICAgICAgICAgICAgaGlkZUxhYmVsOiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9XSxcbiAgICB9KSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRm9ybWx5TWF0VG9nZ2xlTW9kdWxlIHsgfVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsK0JBV3VDLFNBQVEsU0FBUzs7O1lBUnZELFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxRQUFRLEVBQUU7Ozs7R0FJVDthQUNGOzs7Ozs7O0FDVkQ7OztZQVNDLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQztnQkFDekMsT0FBTyxFQUFFO29CQUNQLFlBQVk7b0JBQ1osbUJBQW1CO29CQUNuQixvQkFBb0I7b0JBQ3BCLHdCQUF3QjtvQkFDeEIsWUFBWSxDQUFDLFFBQVEsQ0FBQzt3QkFDcEIsS0FBSyxFQUFFLENBQUM7Z0NBQ04sSUFBSSxFQUFFLFFBQVE7Z0NBQ2QsU0FBUyxFQUFFLHlCQUF5QjtnQ0FDcEMsUUFBUSxFQUFFLENBQUMsWUFBWSxDQUFDO2dDQUN4QixjQUFjLEVBQUU7b0NBQ2QsZUFBZSxFQUFFO3dDQUNmLGtCQUFrQixFQUFFLElBQUk7d0NBQ3hCLFVBQVUsRUFBRSxRQUFRO3dDQUNwQixTQUFTLEVBQUUsSUFBSTtxQ0FDaEI7aUNBQ0Y7NkJBQ0YsQ0FBQztxQkFDSCxDQUFDO2lCQUNIO2FBQ0Y7Ozs7Ozs7Ozs7Ozs7OzsifQ==