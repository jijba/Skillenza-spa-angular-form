!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@ngx-formly/material/form-field"),require("@angular/forms"),require("rxjs"),require("@angular/common"),require("@ngx-formly/core"),require("@angular/material/checkbox")):"function"==typeof define&&define.amd?define("@ngx-formly/material/checkbox",["exports","@angular/core","@ngx-formly/material/form-field","@angular/forms","rxjs","@angular/common","@ngx-formly/core","@angular/material/checkbox"],o):o((e["ngx-formly"]=e["ngx-formly"]||{},e["ngx-formly"].material=e["ngx-formly"].material||{},e["ngx-formly"].material.checkbox={}),e.ng.core,e["ngx-formly"].material["form-field"],e.ng.forms,e.rxjs,e.ng.common,null,e.ng.material.checkbox)}(this,function(e,n,o,t,r,i,l,a){"use strict";var c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var n in o)o.hasOwnProperty(n)&&(e[n]=o[n])};function m(e,o){function n(){this.constructor=e}c(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}var f=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return m(o,e),o.prototype.change=function(e){this.to.change&&this.to.change(this.field,e)},o.decorators=[{type:n.Component,args:[{selector:"formly-field-mat-checkbox",template:'\n    <mat-checkbox\n      [formControl]="formControl"\n      [id]="id"\n      [formlyAttributes]="field"\n      (change)="change($event)"\n      [indeterminate]="to.indeterminate && model[key] === undefined"\n      [color]="to.color"\n      [labelPosition]="to.align || to.labelPosition">\n      {{ to.label }}\n      <ng-container *ngIf="to.required && to.hideRequiredMarker !== true">*</ng-container>\n    </mat-checkbox>\n  '}]}],o}(o.FieldType),u=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return m(o,e),o.createControl=function(n,e){if(e.templateOptions.options instanceof r.Observable)throw new Error("[Formly Error] You cannot pass an Observable to a multicheckbox yet.");var o=e.templateOptions.options.reduce(function(e,o){return e[o.key]=new t.FormControl(n?n[o.key]:undefined),e},{});return new t.FormGroup(o,e.validators?e.validators.validation:undefined,e.asyncValidators?e.asyncValidators.validation:undefined)},o.decorators=[{type:n.Component,args:[{selector:"formly-field-mat-multicheckbox",template:'\n    <ng-container *ngFor="let option of to.options; let i = index;">\n      <mat-checkbox [id]="id + \'_\' + i"\n        [formControl]="formControl.get(option.key)"\n        [formlyAttributes]="field"\n        [color]="to.color"\n        [labelPosition]="to.labelPosition">\n          {{ option.value }}\n      </mat-checkbox>\n    </ng-container>\n  '}]}],o}(o.FieldType),d=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{declarations:[f,u],imports:[i.CommonModule,t.ReactiveFormsModule,a.MatCheckboxModule,o.FormlyMatFormFieldModule,l.FormlyModule.forChild({types:[{name:"checkbox",component:f,wrappers:["form-field"],defaultOptions:{templateOptions:{hideFieldUnderline:!0,indeterminate:!0,floatLabel:"always",hideLabel:!0,align:"start"}}},{name:"multicheckbox",component:u,wrappers:["form-field"],defaultOptions:{templateOptions:{hideFieldUnderline:!0,floatLabel:"always",options:[]}}}]})]}]}],e}();e.FormlyMatCheckboxModule=d,e.FormlyFieldCheckbox=f,e.FormlyFieldMultiCheckbox=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-formly-material-checkbox.umd.min.js.map