{"version":3,"sources":["null","ng://@ngx-formly/material/checkbox/checkbox.type.ts","ng://@ngx-formly/material/checkbox/multicheckbox.type.ts","ng://@ngx-formly/material/checkbox/checkbox.module.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","tslib_1.__extends","FormlyFieldCheckbox","change","$event","to","field","Component","args","selector","template","FieldType","FormlyFieldMultiCheckbox","createControl","model","templateOptions","options","Observable","Error","controlGroupConfig","reduce","previous","option","key","FormControl","undefined","FormGroup","validators","validation","asyncValidators","FormlyMatCheckboxModule","NgModule","declarations","imports","CommonModule","ReactiveFormsModule","MatCheckboxModule","FormlyMatFormFieldModule","FormlyModule","forChild","types","name","component","wrappers","defaultOptions","hideFieldUnderline","indeterminate","floatLabel","hideLabel","align"],"mappings":"8xBAgBA,IAAIA,EAAgBC,OAAOC,gBACtB,CAAEC,UAAW,cAAgBC,OAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIC,KAAKD,EAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,KAEzE,SAAAE,EAA0BJ,EAAGC,GAEzB,SAAAI,IAAgBC,KAAKC,YAAcP,EADnCL,EAAcK,EAAGC,GAEjBD,EAAEQ,UAAkB,OAANP,EAAaL,OAAOa,OAAOR,IAAMI,EAAGG,UAAYP,EAAEO,UAAW,IAAIH,wFCH1CK,EAAAA,EAAAA,GACvCC,EAAAH,UAAAI,OAAA,SAAOC,GACDP,KAAKQ,GAAGF,QACVN,KAAKQ,GAAGF,OAAON,KAAKS,MAAOF,wBAnBhCG,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,4BACVC,SAAU,sbAc6BC,EAAAA,4FCAKV,EAAAA,EAAAA,GACrCW,EAAAC,cAAP,SAAqBC,EAAYR,GAC/B,GAAMA,EAAMS,gBAAgBC,mBAAmBC,EAAAA,WAY7C,MAAM,IAAIC,MAAM,wEAXhB,IAAIC,EAAqBb,EAAMS,gBAAgBC,QAAQI,OAAO,SAACC,EAAUC,GAEvE,OADAD,EAASC,EAAOC,KAAO,IAAIC,EAAAA,YAAYV,EAAQA,EAAMQ,EAAOC,KAAOE,WAC5DJ,GACN,IAEH,OAAO,IAAIK,EAAAA,UACTP,EACAb,EAAMqB,WAAarB,EAAMqB,WAAWC,WAAaH,UACjDnB,EAAMuB,gBAAkBvB,EAAMuB,gBAAgBD,WAAaH,gCAzBlElB,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iCACVC,SAAU,2WAYkCC,EAAAA,WCpB9CmB,EAAA,oDAWCC,EAAAA,SAAQvB,KAAA,CAAC,CACRwB,aAAc,CAAC9B,EAAqBU,GACpCqB,QAAS,CACPC,EAAAA,aACAC,EAAAA,oBAEAC,EAAAA,kBAEAC,EAAAA,yBACAC,EAAAA,aAAaC,SAAS,CACpBC,MAAO,CACL,CACEC,KAAM,WACNC,UAAWxC,EACXyC,SAAU,CAAC,cACXC,eAAgB,CACd7B,gBAAiB,CACf8B,oBAAoB,EACpBC,eAAe,EACfC,WAAY,SACZC,WAAW,EACXC,MAAO,WAIb,CACER,KAAM,gBACNC,UAAW9B,EACX+B,SAAU,CAAC,cACXC,eAAgB,CACd7B,gBAAiB,CACf8B,oBAAoB,EACpBE,WAAY,SACZ/B,QAAS,gBA5CvB","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\n\n@Component({\n  selector: 'formly-field-mat-checkbox',\n  template: `\n    <mat-checkbox\n      [formControl]=\"formControl\"\n      [id]=\"id\"\n      [formlyAttributes]=\"field\"\n      (change)=\"change($event)\"\n      [indeterminate]=\"to.indeterminate && model[key] === undefined\"\n      [color]=\"to.color\"\n      [labelPosition]=\"to.align || to.labelPosition\">\n      {{ to.label }}\n      <ng-container *ngIf=\"to.required && to.hideRequiredMarker !== true\">*</ng-container>\n    </mat-checkbox>\n  `,\n})\nexport class FormlyFieldCheckbox extends FieldType {\n  change($event: MatCheckboxChange) {\n    if (this.to.change) {\n      this.to.change(this.field, $event);\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'formly-field-mat-multicheckbox',\n  template: `\n    <ng-container *ngFor=\"let option of to.options; let i = index;\">\n      <mat-checkbox [id]=\"id + '_' + i\"\n        [formControl]=\"formControl.get(option.key)\"\n        [formlyAttributes]=\"field\"\n        [color]=\"to.color\"\n        [labelPosition]=\"to.labelPosition\">\n          {{ option.value }}\n      </mat-checkbox>\n    </ng-container>\n  `,\n})\nexport class FormlyFieldMultiCheckbox extends FieldType {\n  static createControl(model: any, field: FormlyFieldConfig): AbstractControl {\n    if (!(field.templateOptions.options instanceof Observable)) {\n      let controlGroupConfig = field.templateOptions.options.reduce((previous, option) => {\n        previous[option.key] = new FormControl(model ? model[option.key] : undefined);\n        return previous;\n      }, {});\n\n      return new FormGroup(\n        controlGroupConfig,\n        field.validators ? field.validators.validation : undefined,\n        field.asyncValidators ? field.asyncValidators.validation : undefined,\n      );\n    } else {\n      throw new Error(`[Formly Error] You cannot pass an Observable to a multicheckbox yet.`);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { FormlyFieldCheckbox } from './checkbox.type';\nimport { FormlyFieldMultiCheckbox } from './multicheckbox.type';\n\n@NgModule({\n  declarations: [FormlyFieldCheckbox, FormlyFieldMultiCheckbox],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    MatCheckboxModule,\n\n    FormlyMatFormFieldModule,\n    FormlyModule.forChild({\n      types: [\n        {\n          name: 'checkbox',\n          component: FormlyFieldCheckbox,\n          wrappers: ['form-field'],\n          defaultOptions: {\n            templateOptions: {\n              hideFieldUnderline: true,\n              indeterminate: true,\n              floatLabel: 'always',\n              hideLabel: true,\n              align: 'start', // start or end\n            },\n          },\n        },\n        {\n          name: 'multicheckbox',\n          component: FormlyFieldMultiCheckbox,\n          wrappers: ['form-field'],\n          defaultOptions: {\n            templateOptions: {\n              hideFieldUnderline: true,\n              floatLabel: 'always',\n              options: [],\n            },\n          },\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyMatCheckboxModule { }\n"]}