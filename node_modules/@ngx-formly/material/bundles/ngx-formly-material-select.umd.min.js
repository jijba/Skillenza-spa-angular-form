!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/material/select"),require("@ngx-formly/material/form-field"),require("rxjs"),require("rxjs/operators"),require("@angular/common"),require("@ngx-formly/core"),require("@angular/forms")):"function"==typeof define&&define.amd?define("@ngx-formly/material/select",["exports","@angular/core","@angular/material/select","@ngx-formly/material/form-field","rxjs","rxjs/operators","@angular/common","@ngx-formly/core","@angular/forms"],o):o((e["ngx-formly"]=e["ngx-formly"]||{},e["ngx-formly"].material=e["ngx-formly"].material||{},e["ngx-formly"].material.select={}),e.ng.core,e.ng.material.select,e["ngx-formly"].material["form-field"],e.rxjs,e.rxjs.operators,e.ng.common,null,e.ng.forms)}(this,function(e,r,t,o,n,l,a,i,p){"use strict";var u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var r in o)o.hasOwnProperty(r)&&(e[r]=o[r])};var c=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return function(e,o){function r(){this.constructor=e}u(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}(o,e),Object.defineProperty(o.prototype,"labelProp",{get:function(){return this.to.labelProp||"label"},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"valueProp",{get:function(){return this.to.valueProp||"value"},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"groupProp",{get:function(){return this.to.groupProp||"group"},enumerable:!0,configurable:!0}),o.prototype.change=function(e){this.to.change&&this.to.change(this.field,e)},o.decorators=[{type:r.Component,args:[{selector:"formly-field-mat-select",template:'\n    <mat-select [id]="id"\n      [formControl]="formControl"\n      [formlyAttributes]="field"\n      [placeholder]="to.placeholder"\n      [multiple]="to.multiple"\n      (selectionChange)="change($event)"\n      [errorStateMatcher]="errorStateMatcher">\n      <ng-container *ngFor="let item of to.options | formlySelectOptions:groupProp | async">\n        <mat-optgroup *ngIf="item.group" [label]="item.label">\n          <mat-option *ngFor="let child of item.group" [value]="child[valueProp]" [disabled]="child.disabled">\n            {{ child[labelProp] }}\n          </mat-option>\n        </mat-optgroup>\n        <mat-option *ngIf="!item.group" [value]="item[valueProp]" [disabled]="item.disabled">{{ item[labelProp] }}</mat-option>\n      </ng-container>\n    </mat-select>\n  '}]}],o.propDecorators={formFieldControl:[{type:r.ViewChild,args:[t.MatSelect]}]},o}(o.FieldType),m=function(){function e(){}return e.prototype.transform=function(e,o){var r=this;return void 0===o&&(o="group"),e instanceof n.Observable||(e=n.of(e)),e.pipe(l.map(function(e){return r.toOptions(e,o)}))},e.prototype.toOptions=function(e,o){var r=[],t={};return e.map(function(e){e[o]?t[e[o]]?t[e[o]].push(e):(t[e[o]]=[e],r.push({label:e[o],group:t[e[o]]})):r.push(e)}),r},e.decorators=[{type:r.Pipe,args:[{name:"formlySelectOptions"}]}],e}(),f=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{declarations:[c,m],imports:[a.CommonModule,p.ReactiveFormsModule,t.MatSelectModule,o.FormlyMatFormFieldModule,i.FormlyModule.forChild({types:[{name:"select",component:c,wrappers:["form-field"],defaultOptions:{templateOptions:{options:[]}}}]})]}]}],e}();e.FormlyMatSelectModule=f,e.FormlyFieldSelect=c,e.Éµa=m,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-formly-material-select.umd.min.js.map