/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { MatSelect } from '@angular/material/select';
import { FieldType } from '@ngx-formly/material/form-field';
var FormlyFieldSelect = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyFieldSelect, _super);
    function FormlyFieldSelect() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FormlyFieldSelect.prototype, "labelProp", {
        get: /**
         * @return {?}
         */
        function () { return this.to["labelProp"] || 'label'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormlyFieldSelect.prototype, "valueProp", {
        get: /**
         * @return {?}
         */
        function () { return this.to["valueProp"] || 'value'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormlyFieldSelect.prototype, "groupProp", {
        get: /**
         * @return {?}
         */
        function () { return this.to["groupProp"] || 'group'; },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} $event
     * @return {?}
     */
    FormlyFieldSelect.prototype.change = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if (this.to.change) {
            this.to.change(this.field, $event);
        }
    };
    FormlyFieldSelect.decorators = [
        { type: Component, args: [{
                    selector: 'formly-field-mat-select',
                    template: "\n    <mat-select [id]=\"id\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [placeholder]=\"to.placeholder\"\n      [multiple]=\"to.multiple\"\n      (selectionChange)=\"change($event)\"\n      [errorStateMatcher]=\"errorStateMatcher\">\n      <ng-container *ngFor=\"let item of to.options | formlySelectOptions:groupProp | async\">\n        <mat-optgroup *ngIf=\"item.group\" [label]=\"item.label\">\n          <mat-option *ngFor=\"let child of item.group\" [value]=\"child[valueProp]\" [disabled]=\"child.disabled\">\n            {{ child[labelProp] }}\n          </mat-option>\n        </mat-optgroup>\n        <mat-option *ngIf=\"!item.group\" [value]=\"item[valueProp]\" [disabled]=\"item.disabled\">{{ item[labelProp] }}</mat-option>\n      </ng-container>\n    </mat-select>\n  ",
                },] },
    ];
    FormlyFieldSelect.propDecorators = {
        formFieldControl: [{ type: ViewChild, args: [MatSelect,] }]
    };
    return FormlyFieldSelect;
}(FieldType));
export { FormlyFieldSelect };
function FormlyFieldSelect_tsickle_Closure_declarations() {
    /** @type {?} */
    FormlyFieldSelect.prototype.formFieldControl;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LnR5cGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LWZvcm1seS9tYXRlcmlhbC9zZWxlY3QvIiwic291cmNlcyI6WyJzZWxlY3QudHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxTQUFTLEVBQW1CLE1BQU0sMEJBQTBCLENBQUM7QUFDdEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGlDQUFpQyxDQUFDOztJQXVCckIsNkNBQVM7Ozs7SUFHOUMsc0JBQUksd0NBQVM7Ozs7UUFBYixjQUEwQixNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsaUJBQWMsT0FBTyxDQUFDLEVBQUU7OztPQUFBO0lBQ2hFLHNCQUFJLHdDQUFTOzs7O1FBQWIsY0FBMEIsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLGlCQUFjLE9BQU8sQ0FBQyxFQUFFOzs7T0FBQTtJQUNoRSxzQkFBSSx3Q0FBUzs7OztRQUFiLGNBQTBCLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxpQkFBYyxPQUFPLENBQUMsRUFBRTs7O09BQUE7Ozs7O0lBRWhFLGtDQUFNOzs7O0lBQU4sVUFBTyxNQUF1QjtRQUM1QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDbkIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztTQUNwQztLQUNGOztnQkFoQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLFFBQVEsRUFBRSxxekJBaUJUO2lCQUNGOzs7bUNBRUUsU0FBUyxTQUFDLFNBQVM7OzRCQTFCdEI7RUF5QnVDLFNBQVM7U0FBbkMsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdFNlbGVjdCwgTWF0U2VsZWN0Q2hhbmdlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvc2VsZWN0JztcbmltcG9ydCB7IEZpZWxkVHlwZSB9IGZyb20gJ0BuZ3gtZm9ybWx5L21hdGVyaWFsL2Zvcm0tZmllbGQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmb3JtbHktZmllbGQtbWF0LXNlbGVjdCcsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG1hdC1zZWxlY3QgW2lkXT1cImlkXCJcbiAgICAgIFtmb3JtQ29udHJvbF09XCJmb3JtQ29udHJvbFwiXG4gICAgICBbZm9ybWx5QXR0cmlidXRlc109XCJmaWVsZFwiXG4gICAgICBbcGxhY2Vob2xkZXJdPVwidG8ucGxhY2Vob2xkZXJcIlxuICAgICAgW211bHRpcGxlXT1cInRvLm11bHRpcGxlXCJcbiAgICAgIChzZWxlY3Rpb25DaGFuZ2UpPVwiY2hhbmdlKCRldmVudClcIlxuICAgICAgW2Vycm9yU3RhdGVNYXRjaGVyXT1cImVycm9yU3RhdGVNYXRjaGVyXCI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBpdGVtIG9mIHRvLm9wdGlvbnMgfCBmb3JtbHlTZWxlY3RPcHRpb25zOmdyb3VwUHJvcCB8IGFzeW5jXCI+XG4gICAgICAgIDxtYXQtb3B0Z3JvdXAgKm5nSWY9XCJpdGVtLmdyb3VwXCIgW2xhYmVsXT1cIml0ZW0ubGFiZWxcIj5cbiAgICAgICAgICA8bWF0LW9wdGlvbiAqbmdGb3I9XCJsZXQgY2hpbGQgb2YgaXRlbS5ncm91cFwiIFt2YWx1ZV09XCJjaGlsZFt2YWx1ZVByb3BdXCIgW2Rpc2FibGVkXT1cImNoaWxkLmRpc2FibGVkXCI+XG4gICAgICAgICAgICB7eyBjaGlsZFtsYWJlbFByb3BdIH19XG4gICAgICAgICAgPC9tYXQtb3B0aW9uPlxuICAgICAgICA8L21hdC1vcHRncm91cD5cbiAgICAgICAgPG1hdC1vcHRpb24gKm5nSWY9XCIhaXRlbS5ncm91cFwiIFt2YWx1ZV09XCJpdGVtW3ZhbHVlUHJvcF1cIiBbZGlzYWJsZWRdPVwiaXRlbS5kaXNhYmxlZFwiPnt7IGl0ZW1bbGFiZWxQcm9wXSB9fTwvbWF0LW9wdGlvbj5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIDwvbWF0LXNlbGVjdD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgRm9ybWx5RmllbGRTZWxlY3QgZXh0ZW5kcyBGaWVsZFR5cGUge1xuICBAVmlld0NoaWxkKE1hdFNlbGVjdCkgZm9ybUZpZWxkQ29udHJvbDogTWF0U2VsZWN0O1xuXG4gIGdldCBsYWJlbFByb3AoKTogc3RyaW5nIHsgcmV0dXJuIHRoaXMudG8ubGFiZWxQcm9wIHx8ICdsYWJlbCc7IH1cbiAgZ2V0IHZhbHVlUHJvcCgpOiBzdHJpbmcgeyByZXR1cm4gdGhpcy50by52YWx1ZVByb3AgfHwgJ3ZhbHVlJzsgfVxuICBnZXQgZ3JvdXBQcm9wKCk6IHN0cmluZyB7IHJldHVybiB0aGlzLnRvLmdyb3VwUHJvcCB8fCAnZ3JvdXAnOyB9XG5cbiAgY2hhbmdlKCRldmVudDogTWF0U2VsZWN0Q2hhbmdlKSB7XG4gICAgaWYgKHRoaXMudG8uY2hhbmdlKSB7XG4gICAgICB0aGlzLnRvLmNoYW5nZSh0aGlzLmZpZWxkLCAkZXZlbnQpO1xuICAgIH1cbiAgfVxufVxuIl19