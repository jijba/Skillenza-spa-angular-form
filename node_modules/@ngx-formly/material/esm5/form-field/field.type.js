/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { TemplateRef, ViewChild } from '@angular/core';
import { FieldType as CoreFieldType } from '@ngx-formly/core';
import { Subject } from 'rxjs';
import { FormlyErrorStateMatcher } from './formly.error-state-matcher';
/**
 * @abstract
 */
var FieldType = /** @class */ (function (_super) {
    tslib_1.__extends(FieldType, _super);
    function FieldType() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.formFieldControl = _this;
        _this.errorStateMatcher = new FormlyErrorStateMatcher(_this);
        _this.stateChanges = new Subject();
        _this._errorState = false;
        return _this;
    }
    /**
     * @return {?}
     */
    FieldType.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.formField) {
            this.formField._control = this.formFieldControl;
        }
    };
    /**
     * @return {?}
     */
    FieldType.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.matPrefix || this.matSuffix) {
            setTimeout(function () {
                _this.to["prefix"] = _this.matPrefix;
                _this.to["suffix"] = _this.matSuffix;
            });
        }
    };
    /**
     * @return {?}
     */
    FieldType.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.formFieldControl = null;
        if (this.formField) {
            delete this.formField._control;
        }
        this.stateChanges.complete();
    };
    /**
     * @param {?} ids
     * @return {?}
     */
    FieldType.prototype.setDescribedByIds = /**
     * @param {?} ids
     * @return {?}
     */
    function (ids) { };
    /**
     * @param {?} event
     * @return {?}
     */
    FieldType.prototype.onContainerClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.field.focus = true;
        this.stateChanges.next();
    };
    Object.defineProperty(FieldType.prototype, "errorState", {
        get: /**
         * @return {?}
         */
        function () {
            var /** @type {?} */ showError = this.options.showError(this);
            if (showError !== this._errorState) {
                this._errorState = showError;
                this.stateChanges.next();
            }
            return showError;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "controlType", {
        get: /**
         * @return {?}
         */
        function () { return this.to.type; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "focused", {
        get: /**
         * @return {?}
         */
        function () { return this.field.focus && !this.disabled; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () { return this.to.disabled; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "required", {
        get: /**
         * @return {?}
         */
        function () { return this.to.required; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "placeholder", {
        get: /**
         * @return {?}
         */
        function () { return this.to.placeholder; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "shouldPlaceholderFloat", {
        get: /**
         * @return {?}
         */
        function () { return this.shouldLabelFloat; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () { return this.formControl.value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "ngControl", {
        get: /**
         * @return {?}
         */
        function () { return /** @type {?} */ (this.formControl); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "empty", {
        get: /**
         * @return {?}
         */
        function () { return !this.formControl.value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "shouldLabelFloat", {
        get: /**
         * @return {?}
         */
        function () { return this.focused || !this.empty; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "formField", {
        get: /**
         * @return {?}
         */
        function () { return (/** @type {?} */ (this.field))['__formField__']; },
        enumerable: true,
        configurable: true
    });
    FieldType.propDecorators = {
        matPrefix: [{ type: ViewChild, args: ['matPrefix',] }],
        matSuffix: [{ type: ViewChild, args: ['matSuffix',] }]
    };
    return FieldType;
}(CoreFieldType));
export { FieldType };
function FieldType_tsickle_Closure_declarations() {
    /** @type {?} */
    FieldType.prototype.matPrefix;
    /** @type {?} */
    FieldType.prototype.matSuffix;
    /** @type {?} */
    FieldType.prototype.formFieldControl;
    /** @type {?} */
    FieldType.prototype.errorStateMatcher;
    /** @type {?} */
    FieldType.prototype.stateChanges;
    /** @type {?} */
    FieldType.prototype._errorState;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQudHlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3gtZm9ybWx5L21hdGVyaWFsL2Zvcm0tZmllbGQvIiwic291cmNlcyI6WyJmaWVsZC50eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFvQyxXQUFXLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxTQUFTLElBQUksYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDOUQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUUvQixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7Ozs7SUFFL0IscUNBQWE7OztpQ0FJTixLQUFJO2tDQUM3QixJQUFJLHVCQUF1QixDQUFDLEtBQUksQ0FBQzs2QkFDdEMsSUFBSSxPQUFPLEVBQVE7NEJBQ3BCLEtBQUs7Ozs7OztJQUVuQiw0QkFBUTs7O0lBQVI7UUFDRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNuQixJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7U0FDakQ7S0FDRjs7OztJQUVELG1DQUFlOzs7SUFBZjtRQUFBLGlCQU9DO1FBTkMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNyQyxVQUFVLENBQUM7Z0JBQ1QsS0FBSSxDQUFDLEVBQUUsYUFBVSxLQUFJLENBQUMsU0FBUyxDQUFDO2dCQUNoQyxLQUFJLENBQUMsRUFBRSxhQUFVLEtBQUksQ0FBQyxTQUFTLENBQUM7YUFDakMsQ0FBQyxDQUFDO1NBQ0o7S0FDRjs7OztJQUVELCtCQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFDN0IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDbkIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQztTQUNoQztRQUNELElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUM7S0FDOUI7Ozs7O0lBRUQscUNBQWlCOzs7O0lBQWpCLFVBQWtCLEdBQWEsS0FBVzs7Ozs7SUFDMUMsb0NBQWdCOzs7O0lBQWhCLFVBQWlCLEtBQWlCO1FBQ2hDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUN4QixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxDQUFDO0tBQzFCO0lBRUQsc0JBQUksaUNBQVU7Ozs7UUFBZDtZQUNFLHFCQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMvQyxFQUFFLENBQUMsQ0FBQyxTQUFTLEtBQUssSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7Z0JBQ25DLElBQUksQ0FBQyxXQUFXLEdBQUcsU0FBUyxDQUFDO2dCQUM3QixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxDQUFDO2FBQzFCO1lBRUQsTUFBTSxDQUFDLFNBQVMsQ0FBQztTQUNsQjs7O09BQUE7SUFFRCxzQkFBSSxrQ0FBVzs7OztRQUFmLGNBQW9CLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFOzs7T0FBQTtJQUMxQyxzQkFBSSw4QkFBTzs7OztRQUFYLGNBQWdCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRTs7O09BQUE7SUFDNUQsc0JBQUksK0JBQVE7Ozs7UUFBWixjQUFpQixNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRTs7O09BQUE7SUFDM0Msc0JBQUksK0JBQVE7Ozs7UUFBWixjQUFpQixNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRTs7O09BQUE7SUFDM0Msc0JBQUksa0NBQVc7Ozs7UUFBZixjQUFvQixNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsRUFBRTs7O09BQUE7SUFDakQsc0JBQUksNkNBQXNCOzs7O1FBQTFCLGNBQStCLE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRTs7O09BQUE7SUFDOUQsc0JBQUksNEJBQUs7Ozs7UUFBVCxjQUFjLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxFQUFFOzs7T0FBQTtJQUM5QyxzQkFBSSxnQ0FBUzs7OztRQUFiLGNBQWtCLE1BQU0sbUJBQUMsSUFBSSxDQUFDLFdBQWtCLEVBQUMsRUFBRTs7O09BQUE7SUFDbkQsc0JBQUksNEJBQUs7Ozs7UUFBVCxjQUFjLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEVBQUU7OztPQUFBO0lBQy9DLHNCQUFJLHVDQUFnQjs7OztRQUFwQixjQUF5QixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTs7O09BQUE7SUFDOUQsc0JBQUksZ0NBQVM7Ozs7UUFBYixjQUFnQyxNQUFNLENBQUMsbUJBQU0sSUFBSSxDQUFDLEtBQUssRUFBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLEVBQUU7OztPQUFBOzs0QkF6RDNFLFNBQVMsU0FBQyxXQUFXOzRCQUNyQixTQUFTLFNBQUMsV0FBVzs7b0JBUnhCO0VBTXdDLGFBQWE7U0FBL0IsU0FBUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgT25EZXN0cm95LCBBZnRlclZpZXdJbml0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFR5cGUgYXMgQ29yZUZpZWxkVHlwZSB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTWF0Rm9ybUZpZWxkLCBNYXRGb3JtRmllbGRDb250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZm9ybS1maWVsZCc7XG5pbXBvcnQgeyBGb3JtbHlFcnJvclN0YXRlTWF0Y2hlciB9IGZyb20gJy4vZm9ybWx5LmVycm9yLXN0YXRlLW1hdGNoZXInO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgRmllbGRUeXBlIGV4dGVuZHMgQ29yZUZpZWxkVHlwZSBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95LCBNYXRGb3JtRmllbGRDb250cm9sPGFueT4ge1xuICBAVmlld0NoaWxkKCdtYXRQcmVmaXgnKSBtYXRQcmVmaXg6IFRlbXBsYXRlUmVmPGFueT47XG4gIEBWaWV3Q2hpbGQoJ21hdFN1ZmZpeCcpIG1hdFN1ZmZpeDogVGVtcGxhdGVSZWY8YW55PjtcblxuICBmb3JtRmllbGRDb250cm9sOiBNYXRGb3JtRmllbGRDb250cm9sPGFueT4gPSB0aGlzO1xuICBlcnJvclN0YXRlTWF0Y2hlciA9IG5ldyBGb3JtbHlFcnJvclN0YXRlTWF0Y2hlcih0aGlzKTtcbiAgc3RhdGVDaGFuZ2VzID0gbmV3IFN1YmplY3Q8dm9pZD4oKTtcbiAgX2Vycm9yU3RhdGUgPSBmYWxzZTtcblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy5mb3JtRmllbGQpIHtcbiAgICAgIHRoaXMuZm9ybUZpZWxkLl9jb250cm9sID0gdGhpcy5mb3JtRmllbGRDb250cm9sO1xuICAgIH1cbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBpZiAodGhpcy5tYXRQcmVmaXggfHwgdGhpcy5tYXRTdWZmaXgpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLnRvLnByZWZpeCA9IHRoaXMubWF0UHJlZml4O1xuICAgICAgICB0aGlzLnRvLnN1ZmZpeCA9IHRoaXMubWF0U3VmZml4O1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5mb3JtRmllbGRDb250cm9sID0gbnVsbDtcbiAgICBpZiAodGhpcy5mb3JtRmllbGQpIHtcbiAgICAgIGRlbGV0ZSB0aGlzLmZvcm1GaWVsZC5fY29udHJvbDtcbiAgICB9XG4gICAgdGhpcy5zdGF0ZUNoYW5nZXMuY29tcGxldGUoKTtcbiAgfVxuXG4gIHNldERlc2NyaWJlZEJ5SWRzKGlkczogc3RyaW5nW10pOiB2b2lkIHsgfVxuICBvbkNvbnRhaW5lckNsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgdGhpcy5maWVsZC5mb2N1cyA9IHRydWU7XG4gICAgdGhpcy5zdGF0ZUNoYW5nZXMubmV4dCgpO1xuICB9XG5cbiAgZ2V0IGVycm9yU3RhdGUoKSB7XG4gICAgY29uc3Qgc2hvd0Vycm9yID0gdGhpcy5vcHRpb25zLnNob3dFcnJvcih0aGlzKTtcbiAgICBpZiAoc2hvd0Vycm9yICE9PSB0aGlzLl9lcnJvclN0YXRlKSB7XG4gICAgICB0aGlzLl9lcnJvclN0YXRlID0gc2hvd0Vycm9yO1xuICAgICAgdGhpcy5zdGF0ZUNoYW5nZXMubmV4dCgpO1xuICAgIH1cblxuICAgIHJldHVybiBzaG93RXJyb3I7XG4gIH1cblxuICBnZXQgY29udHJvbFR5cGUoKSB7IHJldHVybiB0aGlzLnRvLnR5cGU7IH1cbiAgZ2V0IGZvY3VzZWQoKSB7IHJldHVybiB0aGlzLmZpZWxkLmZvY3VzICYmICF0aGlzLmRpc2FibGVkOyB9XG4gIGdldCBkaXNhYmxlZCgpIHsgcmV0dXJuIHRoaXMudG8uZGlzYWJsZWQ7IH1cbiAgZ2V0IHJlcXVpcmVkKCkgeyByZXR1cm4gdGhpcy50by5yZXF1aXJlZDsgfVxuICBnZXQgcGxhY2Vob2xkZXIoKSB7IHJldHVybiB0aGlzLnRvLnBsYWNlaG9sZGVyOyB9XG4gIGdldCBzaG91bGRQbGFjZWhvbGRlckZsb2F0KCkgeyByZXR1cm4gdGhpcy5zaG91bGRMYWJlbEZsb2F0OyB9XG4gIGdldCB2YWx1ZSgpIHsgcmV0dXJuIHRoaXMuZm9ybUNvbnRyb2wudmFsdWU7IH1cbiAgZ2V0IG5nQ29udHJvbCgpIHsgcmV0dXJuIHRoaXMuZm9ybUNvbnRyb2wgYXMgYW55OyB9XG4gIGdldCBlbXB0eSgpIHsgcmV0dXJuICF0aGlzLmZvcm1Db250cm9sLnZhbHVlOyB9XG4gIGdldCBzaG91bGRMYWJlbEZsb2F0KCkgeyByZXR1cm4gdGhpcy5mb2N1c2VkIHx8ICF0aGlzLmVtcHR5OyB9XG4gIGdldCBmb3JtRmllbGQoKTogTWF0Rm9ybUZpZWxkIHsgcmV0dXJuICg8YW55PnRoaXMuZmllbGQpWydfX2Zvcm1GaWVsZF9fJ107IH1cbn1cbiJdfQ==