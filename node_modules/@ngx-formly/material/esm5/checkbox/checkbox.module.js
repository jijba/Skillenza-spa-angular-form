/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormlyModule } from '@ngx-formly/core';
import { ReactiveFormsModule } from '@angular/forms';
import { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { FormlyFieldCheckbox } from './checkbox.type';
import { FormlyFieldMultiCheckbox } from './multicheckbox.type';
var FormlyMatCheckboxModule = /** @class */ (function () {
    function FormlyMatCheckboxModule() {
    }
    FormlyMatCheckboxModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [FormlyFieldCheckbox, FormlyFieldMultiCheckbox],
                    imports: [
                        CommonModule,
                        ReactiveFormsModule,
                        MatCheckboxModule,
                        FormlyMatFormFieldModule,
                        FormlyModule.forChild({
                            types: [
                                {
                                    name: 'checkbox',
                                    component: FormlyFieldCheckbox,
                                    wrappers: ['form-field'],
                                    defaultOptions: {
                                        templateOptions: {
                                            hideFieldUnderline: true,
                                            indeterminate: true,
                                            floatLabel: 'always',
                                            hideLabel: true,
                                            align: 'start',
                                        },
                                    },
                                },
                                {
                                    name: 'multicheckbox',
                                    component: FormlyFieldMultiCheckbox,
                                    wrappers: ['form-field'],
                                    defaultOptions: {
                                        templateOptions: {
                                            hideFieldUnderline: true,
                                            floatLabel: 'always',
                                            options: [],
                                        },
                                    },
                                },
                            ],
                        }),
                    ],
                },] },
    ];
    return FormlyMatCheckboxModule;
}());
export { FormlyMatCheckboxModule };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5neC1mb3JtbHkvbWF0ZXJpYWwvY2hlY2tib3gvIiwic291cmNlcyI6WyJjaGVja2JveC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVyRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUUvRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7Ozs7Z0JBRS9ELFFBQVEsU0FBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxtQkFBbUIsRUFBRSx3QkFBd0IsQ0FBQztvQkFDN0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osbUJBQW1CO3dCQUVuQixpQkFBaUI7d0JBRWpCLHdCQUF3Qjt3QkFDeEIsWUFBWSxDQUFDLFFBQVEsQ0FBQzs0QkFDcEIsS0FBSyxFQUFFO2dDQUNMO29DQUNFLElBQUksRUFBRSxVQUFVO29DQUNoQixTQUFTLEVBQUUsbUJBQW1CO29DQUM5QixRQUFRLEVBQUUsQ0FBQyxZQUFZLENBQUM7b0NBQ3hCLGNBQWMsRUFBRTt3Q0FDZCxlQUFlLEVBQUU7NENBQ2Ysa0JBQWtCLEVBQUUsSUFBSTs0Q0FDeEIsYUFBYSxFQUFFLElBQUk7NENBQ25CLFVBQVUsRUFBRSxRQUFROzRDQUNwQixTQUFTLEVBQUUsSUFBSTs0Q0FDZixLQUFLLEVBQUUsT0FBTzt5Q0FDZjtxQ0FDRjtpQ0FDRjtnQ0FDRDtvQ0FDRSxJQUFJLEVBQUUsZUFBZTtvQ0FDckIsU0FBUyxFQUFFLHdCQUF3QjtvQ0FDbkMsUUFBUSxFQUFFLENBQUMsWUFBWSxDQUFDO29DQUN4QixjQUFjLEVBQUU7d0NBQ2QsZUFBZSxFQUFFOzRDQUNmLGtCQUFrQixFQUFFLElBQUk7NENBQ3hCLFVBQVUsRUFBRSxRQUFROzRDQUNwQixPQUFPLEVBQUUsRUFBRTt5Q0FDWjtxQ0FDRjtpQ0FDRjs2QkFDRjt5QkFDRixDQUFDO3FCQUNIO2lCQUNGOztrQ0FuREQ7O1NBb0RhLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRm9ybWx5TW9kdWxlIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBGb3JtbHlNYXRGb3JtRmllbGRNb2R1bGUgfSBmcm9tICdAbmd4LWZvcm1seS9tYXRlcmlhbC9mb3JtLWZpZWxkJztcbmltcG9ydCB7IE1hdENoZWNrYm94TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY2hlY2tib3gnO1xuXG5pbXBvcnQgeyBGb3JtbHlGaWVsZENoZWNrYm94IH0gZnJvbSAnLi9jaGVja2JveC50eXBlJztcbmltcG9ydCB7IEZvcm1seUZpZWxkTXVsdGlDaGVja2JveCB9IGZyb20gJy4vbXVsdGljaGVja2JveC50eXBlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbRm9ybWx5RmllbGRDaGVja2JveCwgRm9ybWx5RmllbGRNdWx0aUNoZWNrYm94XSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuXG4gICAgTWF0Q2hlY2tib3hNb2R1bGUsXG5cbiAgICBGb3JtbHlNYXRGb3JtRmllbGRNb2R1bGUsXG4gICAgRm9ybWx5TW9kdWxlLmZvckNoaWxkKHtcbiAgICAgIHR5cGVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiAnY2hlY2tib3gnLFxuICAgICAgICAgIGNvbXBvbmVudDogRm9ybWx5RmllbGRDaGVja2JveCxcbiAgICAgICAgICB3cmFwcGVyczogWydmb3JtLWZpZWxkJ10sXG4gICAgICAgICAgZGVmYXVsdE9wdGlvbnM6IHtcbiAgICAgICAgICAgIHRlbXBsYXRlT3B0aW9uczoge1xuICAgICAgICAgICAgICBoaWRlRmllbGRVbmRlcmxpbmU6IHRydWUsXG4gICAgICAgICAgICAgIGluZGV0ZXJtaW5hdGU6IHRydWUsXG4gICAgICAgICAgICAgIGZsb2F0TGFiZWw6ICdhbHdheXMnLFxuICAgICAgICAgICAgICBoaWRlTGFiZWw6IHRydWUsXG4gICAgICAgICAgICAgIGFsaWduOiAnc3RhcnQnLCAvLyBzdGFydCBvciBlbmRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6ICdtdWx0aWNoZWNrYm94JyxcbiAgICAgICAgICBjb21wb25lbnQ6IEZvcm1seUZpZWxkTXVsdGlDaGVja2JveCxcbiAgICAgICAgICB3cmFwcGVyczogWydmb3JtLWZpZWxkJ10sXG4gICAgICAgICAgZGVmYXVsdE9wdGlvbnM6IHtcbiAgICAgICAgICAgIHRlbXBsYXRlT3B0aW9uczoge1xuICAgICAgICAgICAgICBoaWRlRmllbGRVbmRlcmxpbmU6IHRydWUsXG4gICAgICAgICAgICAgIGZsb2F0TGFiZWw6ICdhbHdheXMnLFxuICAgICAgICAgICAgICBvcHRpb25zOiBbXSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSksXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1seU1hdENoZWNrYm94TW9kdWxlIHsgfVxuIl19