/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { FieldType } from '@ngx-formly/material/form-field';
import { MatInput } from '@angular/material/input';
var FormlyDatepickerTypeComponent = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyDatepickerTypeComponent, _super);
    function FormlyDatepickerTypeComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FormlyDatepickerTypeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'formly-field-mat-datepicker',
                    template: "\n    <input matInput\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [formControl]=\"formControl\"\n      [matDatepicker]=\"picker\"\n      [matDatepickerFilter]=\"to.datepickerOptions.filter\"\n      [max]=\"to.datepickerOptions.max\"\n      [min]=\"to.datepickerOptions.min\"\n      [formlyAttributes]=\"field\"\n      [placeholder]=\"to.placeholder\">\n    <ng-template #matSuffix>\n      <mat-datepicker-toggle [for]=\"picker\"></mat-datepicker-toggle>\n    </ng-template>\n    <mat-datepicker #picker\n      [color]=\"to.color\"\n      [touchUi]=\"to.datepickerOptions.touchUi\"\n      [startView]=\"to.datepickerOptions.startView\"\n      [startAt]=\"to.datepickerOptions.startAt\">\n    </mat-datepicker>\n  ",
                },] },
    ];
    FormlyDatepickerTypeComponent.propDecorators = {
        formFieldControl: [{ type: ViewChild, args: [MatInput,] }]
    };
    return FormlyDatepickerTypeComponent;
}(FieldType));
export { FormlyDatepickerTypeComponent };
function FormlyDatepickerTypeComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    FormlyDatepickerTypeComponent.prototype.formFieldControl;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci50eXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5neC1mb3JtbHkvbWF0ZXJpYWwvZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImRhdGVwaWNrZXIudHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM1RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0seUJBQXlCLENBQUM7O0lBeUJBLHlEQUFTOzs7OztnQkF2QjNELFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsNkJBQTZCO29CQUN2QyxRQUFRLEVBQUUsc3RCQW1CVDtpQkFDRjs7O21DQUVFLFNBQVMsU0FBQyxRQUFROzt3Q0E1QnJCO0VBMkJtRCxTQUFTO1NBQS9DLDZCQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFR5cGUgfSBmcm9tICdAbmd4LWZvcm1seS9tYXRlcmlhbC9mb3JtLWZpZWxkJztcbmltcG9ydCB7IE1hdElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaW5wdXQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmb3JtbHktZmllbGQtbWF0LWRhdGVwaWNrZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxpbnB1dCBtYXRJbnB1dFxuICAgICAgW2Vycm9yU3RhdGVNYXRjaGVyXT1cImVycm9yU3RhdGVNYXRjaGVyXCJcbiAgICAgIFtmb3JtQ29udHJvbF09XCJmb3JtQ29udHJvbFwiXG4gICAgICBbbWF0RGF0ZXBpY2tlcl09XCJwaWNrZXJcIlxuICAgICAgW21hdERhdGVwaWNrZXJGaWx0ZXJdPVwidG8uZGF0ZXBpY2tlck9wdGlvbnMuZmlsdGVyXCJcbiAgICAgIFttYXhdPVwidG8uZGF0ZXBpY2tlck9wdGlvbnMubWF4XCJcbiAgICAgIFttaW5dPVwidG8uZGF0ZXBpY2tlck9wdGlvbnMubWluXCJcbiAgICAgIFtmb3JtbHlBdHRyaWJ1dGVzXT1cImZpZWxkXCJcbiAgICAgIFtwbGFjZWhvbGRlcl09XCJ0by5wbGFjZWhvbGRlclwiPlxuICAgIDxuZy10ZW1wbGF0ZSAjbWF0U3VmZml4PlxuICAgICAgPG1hdC1kYXRlcGlja2VyLXRvZ2dsZSBbZm9yXT1cInBpY2tlclwiPjwvbWF0LWRhdGVwaWNrZXItdG9nZ2xlPlxuICAgIDwvbmctdGVtcGxhdGU+XG4gICAgPG1hdC1kYXRlcGlja2VyICNwaWNrZXJcbiAgICAgIFtjb2xvcl09XCJ0by5jb2xvclwiXG4gICAgICBbdG91Y2hVaV09XCJ0by5kYXRlcGlja2VyT3B0aW9ucy50b3VjaFVpXCJcbiAgICAgIFtzdGFydFZpZXddPVwidG8uZGF0ZXBpY2tlck9wdGlvbnMuc3RhcnRWaWV3XCJcbiAgICAgIFtzdGFydEF0XT1cInRvLmRhdGVwaWNrZXJPcHRpb25zLnN0YXJ0QXRcIj5cbiAgICA8L21hdC1kYXRlcGlja2VyPlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtbHlEYXRlcGlja2VyVHlwZUNvbXBvbmVudCBleHRlbmRzIEZpZWxkVHlwZSB7XG4gIEBWaWV3Q2hpbGQoTWF0SW5wdXQpIGZvcm1GaWVsZENvbnRyb2w6IE1hdElucHV0O1xufVxuIl19